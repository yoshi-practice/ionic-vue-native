{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es5/build/input-shims.js"],"names":["__webpack_require__","r","__webpack_exports__","d","startInputShims","_chunk_e7816c0b_js__WEBPACK_IMPORTED_MODULE_0__","RELOCATED_KEY","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","console","debug","value","cloneInputComponent","doc","ownerDocument","tx","dir","style","transform","removeClone","isFocused","input","activeElement","parentElement","Array","from","querySelectorAll","forEach","clon","remove","pointerEvents","opacity","_a","_b","srcTop","offsetTop","srcLeft","offsetLeft","srcWidth","offsetWidth","srcHeight","offsetHeight","clonedComponentEle","createElement","clonedStyle","classList","add","apply","setAttribute","position","top","left","width","height","clonedInputEl","type","placeholder","tabIndex","appendChild","enableHideCaretOnScroll","scrollEl","scrollHideCaret","shouldHideCaret","onBlur","hideCaret","showCaret","addEventListener","removeEventListener","SKIP_SELECTOR","enableInputBlurring","focused","didScroll","onScroll","onFocusin","onTouchend","ev","active","matches","tapped","target","closest","contains","setTimeout","blur","SCROLL_ASSIST_SPEED","getScrollData","contentEl","keyboardHeight","itemEl","calcScrollData","getBoundingClientRect","window","innerHeight","inputRect","contentRect","plaformHeight","inputTop","inputBottom","bottom","visibleAreaTop","visibleAreaBottom","Math","min","safeAreaTop","safeAreaBottom","distanceToBottom","distanceToTop","scrollAmount","round","distance","abs","duration","scrollDuration","max","scrollPadding","inputSafeY","enableScrollAssist","coord","touchStart","Object","touchEnd","endCoord","hasPointerMoved","preventDefault","stopPropagation","jsSetFocus","scrollData","focus","scrollByPoint","then","threshold","startCoord","deltaX","x","deltaY","y","PADDING_TIMER_KEY","enableScrollPadding","setScrollPadding","onFocusout","tagName","el","timer","clearTimeout","setProperty","INPUT_BLURRING","SCROLL_PADDING","config","getNumber","scrollAssist","getBoolean","inputBlurring","hideCaretMap","WeakMap","scrollAssistMap","registerInput","shadowRoot","querySelector","has","rmFn","set","unregisterInput","fn","get","delete","inputs","_i","inputs_1","length","body","event"],"mappings":"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","file":"js/chunk-2d0cba66.35bc5211.js","sourcesContent":["import { l as pointerCoord } from './chunk-e7816c0b.js';\nvar RELOCATED_KEY = '$ionRelocated';\nfunction relocateInput(componentEl, inputEl, shouldRelocate, inputRelativeY) {\n    if (inputRelativeY === void 0) { inputRelativeY = 0; }\n    if (componentEl[RELOCATED_KEY] === shouldRelocate) {\n        return;\n    }\n    console.debug(\"native-input, hideCaret, shouldHideCaret: \" + shouldRelocate + \", input value: \" + inputEl.value);\n    if (shouldRelocate) {\n        cloneInputComponent(componentEl, inputEl);\n        var doc = componentEl.ownerDocument;\n        var tx = doc.dir === 'rtl' ? 9999 : -9999;\n        inputEl.style.transform = \"translate3d(\" + tx + \"px,\" + inputRelativeY + \"px,0)\";\n    }\n    else {\n        removeClone(componentEl, inputEl);\n    }\n    componentEl[RELOCATED_KEY] = shouldRelocate;\n}\nfunction isFocused(input) {\n    return input === input.ownerDocument.activeElement;\n}\nfunction removeClone(componentEl, inputEl) {\n    if (componentEl && componentEl.parentElement) {\n        Array.from(componentEl.parentElement.querySelectorAll('.cloned-input'))\n            .forEach(function (clon) { return clon.remove(); });\n        componentEl.style.pointerEvents = '';\n    }\n    inputEl.style['transform'] = '';\n    inputEl.style.opacity = '';\n}\nfunction cloneInputComponent(componentEl, inputEl) {\n    var _a, _b;\n    var parentElement = componentEl.parentElement;\n    var doc = componentEl.ownerDocument;\n    if (componentEl && parentElement) {\n        var srcTop = componentEl.offsetTop;\n        var srcLeft = componentEl.offsetLeft;\n        var srcWidth = componentEl.offsetWidth;\n        var srcHeight = componentEl.offsetHeight;\n        var clonedComponentEle = doc.createElement('div');\n        var clonedStyle = clonedComponentEle.style;\n        (_a = clonedComponentEle.classList).add.apply(_a, Array.from(componentEl.classList));\n        clonedComponentEle.classList.add('cloned-input');\n        clonedComponentEle.setAttribute('aria-hidden', 'true');\n        clonedStyle.pointerEvents = 'none';\n        clonedStyle.position = 'absolute';\n        clonedStyle.top = srcTop + 'px';\n        clonedStyle.left = srcLeft + 'px';\n        clonedStyle.width = srcWidth + 'px';\n        clonedStyle.height = srcHeight + 'px';\n        var clonedInputEl = doc.createElement('input');\n        (_b = clonedInputEl.classList).add.apply(_b, Array.from(inputEl.classList));\n        clonedInputEl.value = inputEl.value;\n        clonedInputEl.type = inputEl.type;\n        clonedInputEl.placeholder = inputEl.placeholder;\n        clonedInputEl.tabIndex = -1;\n        clonedComponentEle.appendChild(clonedInputEl);\n        parentElement.appendChild(clonedComponentEle);\n        componentEl.style.pointerEvents = 'none';\n    }\n    inputEl.style.transform = 'scale(0)';\n}\nfunction enableHideCaretOnScroll(componentEl, inputEl, scrollEl) {\n    if (!scrollEl || !inputEl) {\n        return function () { return; };\n    }\n    console.debug('Input: enableHideCaretOnScroll');\n    var scrollHideCaret = function (shouldHideCaret) {\n        if (isFocused(inputEl)) {\n            relocateInput(componentEl, inputEl, shouldHideCaret);\n        }\n    };\n    var onBlur = function () { return relocateInput(componentEl, inputEl, false); };\n    var hideCaret = function () { return scrollHideCaret(true); };\n    var showCaret = function () { return scrollHideCaret(false); };\n    scrollEl.addEventListener('ionScrollStart', hideCaret);\n    scrollEl.addEventListener('ionScrollEnd', showCaret);\n    inputEl.addEventListener('blur', onBlur);\n    return function () {\n        scrollEl.removeEventListener('ionScrollStart', hideCaret);\n        scrollEl.removeEventListener('ionScrollEnd', showCaret);\n        inputEl.addEventListener('ionBlur', onBlur);\n    };\n}\nvar SKIP_SELECTOR = 'input, textarea, [no-blur]';\nfunction enableInputBlurring(doc) {\n    console.debug('Input: enableInputBlurring');\n    var focused = true;\n    var didScroll = false;\n    function onScroll() {\n        didScroll = true;\n    }\n    function onFocusin() {\n        focused = true;\n    }\n    function onTouchend(ev) {\n        if (didScroll) {\n            didScroll = false;\n            return;\n        }\n        var active = doc.activeElement;\n        if (!active) {\n            return;\n        }\n        if (active.matches(SKIP_SELECTOR)) {\n            return;\n        }\n        var tapped = ev.target;\n        if (tapped === active) {\n            return;\n        }\n        if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n            return;\n        }\n        if (tapped.classList.contains('input-cover')) {\n            return;\n        }\n        focused = false;\n        setTimeout(function () {\n            if (!focused) {\n                active.blur();\n            }\n        }, 50);\n    }\n    doc.addEventListener('ionScrollStart', onScroll);\n    doc.addEventListener('focusin', onFocusin, true);\n    doc.addEventListener('touchend', onTouchend, false);\n    return function () {\n        doc.removeEventListener('ionScrollStart', onScroll, true);\n        doc.removeEventListener('focusin', onFocusin, true);\n        doc.removeEventListener('touchend', onTouchend, false);\n    };\n}\nvar SCROLL_ASSIST_SPEED = 0.3;\nfunction getScrollData(componentEl, contentEl, keyboardHeight) {\n    var itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n    return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, window.innerHeight);\n}\nfunction calcScrollData(inputRect, contentRect, keyboardHeight, plaformHeight) {\n    var inputTop = inputRect.top;\n    var inputBottom = inputRect.bottom;\n    var visibleAreaTop = contentRect.top;\n    var visibleAreaBottom = Math.min(contentRect.bottom, plaformHeight - keyboardHeight);\n    var safeAreaTop = visibleAreaTop + 10;\n    var safeAreaBottom = visibleAreaBottom / 2.0;\n    var distanceToBottom = safeAreaBottom - inputBottom;\n    var distanceToTop = safeAreaTop - inputTop;\n    var scrollAmount = Math.round((distanceToBottom < 0)\n        ? -distanceToBottom\n        : (distanceToTop > 0)\n            ? -distanceToTop\n            : 0);\n    var distance = Math.abs(scrollAmount);\n    var duration = distance / SCROLL_ASSIST_SPEED;\n    var scrollDuration = Math.min(400, Math.max(150, duration));\n    return {\n        scrollAmount: scrollAmount,\n        scrollDuration: scrollDuration,\n        scrollPadding: keyboardHeight,\n        inputSafeY: -(inputTop - safeAreaTop) + 4\n    };\n}\nfunction enableScrollAssist(componentEl, inputEl, contentEl, keyboardHeight) {\n    var coord;\n    var touchStart = function (ev) {\n        coord = pointerCoord(ev);\n        console.debug(\"input-base, pointerStart, type: \" + ev.type);\n    };\n    var touchEnd = function (ev) {\n        console.debug(\"input-base, pointerEnd, type: \" + ev.type);\n        if (!coord) {\n            return;\n        }\n        var endCoord = pointerCoord(ev);\n        if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            jsSetFocus(componentEl, inputEl, contentEl, keyboardHeight);\n        }\n    };\n    componentEl.addEventListener('touchstart', touchStart, true);\n    componentEl.addEventListener('touchend', touchEnd, true);\n    return function () {\n        componentEl.removeEventListener('touchstart', touchStart, true);\n        componentEl.removeEventListener('touchend', touchEnd, true);\n    };\n}\nfunction jsSetFocus(componentEl, inputEl, contentEl, keyboardHeight) {\n    var scrollData = getScrollData(componentEl, contentEl, keyboardHeight);\n    if (Math.abs(scrollData.scrollAmount) < 4) {\n        inputEl.focus();\n        return;\n    }\n    relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n    inputEl.focus();\n    contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration).then(function () {\n        relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n        inputEl.focus();\n    });\n}\nfunction hasPointerMoved(threshold, startCoord, endCoord) {\n    if (startCoord && endCoord) {\n        var deltaX = (startCoord.x - endCoord.x);\n        var deltaY = (startCoord.y - endCoord.y);\n        var distance = deltaX * deltaX + deltaY * deltaY;\n        return distance > (threshold * threshold);\n    }\n    return false;\n}\nvar PADDING_TIMER_KEY = '$ionPaddingTimer';\nfunction enableScrollPadding(doc, keyboardHeight) {\n    console.debug('Input: enableScrollPadding');\n    function onFocusin(ev) {\n        setScrollPadding(ev.target, keyboardHeight);\n    }\n    function onFocusout(ev) {\n        setScrollPadding(ev.target, 0);\n    }\n    doc.addEventListener('focusin', onFocusin);\n    doc.addEventListener('focusout', onFocusout);\n    return function () {\n        doc.removeEventListener('focusin', onFocusin);\n        doc.removeEventListener('focusout', onFocusout);\n    };\n}\nfunction setScrollPadding(input, keyboardHeight) {\n    if (input.tagName !== 'INPUT') {\n        return;\n    }\n    if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n        return;\n    }\n    var el = input.closest('ion-content');\n    if (el === null) {\n        return;\n    }\n    var timer = el[PADDING_TIMER_KEY];\n    if (timer) {\n        clearTimeout(timer);\n    }\n    if (keyboardHeight > 0) {\n        el.style.setProperty('--keyboard-offset', keyboardHeight + \"px\");\n    }\n    else {\n        el[PADDING_TIMER_KEY] = setTimeout(function () {\n            el.style.setProperty('--keyboard-offset', '0px');\n        }, 120);\n    }\n}\nvar INPUT_BLURRING = true;\nvar SCROLL_PADDING = true;\nfunction startInputShims(doc, config) {\n    var keyboardHeight = config.getNumber('keyboardHeight', 290);\n    var scrollAssist = config.getBoolean('scrollAssist', true);\n    var hideCaret = config.getBoolean('hideCaretOnScroll', true);\n    var inputBlurring = config.getBoolean('inputBlurring', true);\n    var scrollPadding = config.getBoolean('scrollPadding', true);\n    var hideCaretMap = new WeakMap();\n    var scrollAssistMap = new WeakMap();\n    function registerInput(componentEl) {\n        var inputEl = (componentEl.shadowRoot || componentEl).querySelector('input');\n        var scrollEl = componentEl.closest('ion-content');\n        if (!inputEl) {\n            return;\n        }\n        if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n            var rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n            hideCaretMap.set(componentEl, rmFn);\n        }\n        if (!!scrollEl && scrollAssist && !scrollAssistMap.has(componentEl)) {\n            var rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, keyboardHeight);\n            scrollAssistMap.set(componentEl, rmFn);\n        }\n    }\n    function unregisterInput(componentEl) {\n        if (hideCaret) {\n            var fn = hideCaretMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            hideCaretMap.delete(componentEl);\n        }\n        if (scrollAssist) {\n            var fn = scrollAssistMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            scrollAssistMap.delete(componentEl);\n        }\n    }\n    if (inputBlurring && INPUT_BLURRING) {\n        enableInputBlurring(doc);\n    }\n    if (scrollPadding && SCROLL_PADDING) {\n        enableScrollPadding(doc, keyboardHeight);\n    }\n    var inputs = Array.from(doc.querySelectorAll('ion-input'));\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n        registerInput(input);\n    }\n    doc.body.addEventListener('ionInputDidLoad', function (event) {\n        registerInput(event.target);\n    });\n    doc.body.addEventListener('ionInputDidUnload', function (event) {\n        unregisterInput(event.target);\n    });\n}\nexport { startInputShims };\n"],"sourceRoot":""}