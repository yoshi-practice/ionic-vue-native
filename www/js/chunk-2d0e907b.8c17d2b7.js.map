{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es5/build/swiper.bundle.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Swiper","_polyfills_tslib_js__WEBPACK_IMPORTED_MODULE_0__","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","arr","self","i","length","$","selector","context","els","tempParent","html_1","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","_i","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents_1","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles_1","styles","offsetWidth","parseFloat","outerHeight","styles_2","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","html","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","next_1","prev","previousElementSibling","prevAll","prevEls","prev_1","parent","parentNode","parent_1","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","Object","keys","forEach","methodName","Utils","deleteProps","obj","object","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","params","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","extend","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","get","gestures","SwiperClass","eventsListeners","eventName","priority","method","once","onceHandler","eventHandler","index$$1","emit","data$$1","Array","isArray","slice","eventsArray","handlers_1","useModulesParams","instanceParams","instance","modules","moduleName","module","useModules","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","set","components","use","configurable","installModule","name","proto","static","install","m","concat","updateSize","width$$1","height$$1","swiper","$el","width","clientWidth","height","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","newSlidesGrid","slidesPerRow","numFullColumns","slide_1","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize_1","slideSizeValue","allSlidesOffset_1","snap","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slide_2","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","activeSlide","realIndex","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","z","previousTranslate","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","transition$1","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val$$1","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","translate_1","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","touchStartPreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","pow","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","clickTimeout","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition_1","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","_a","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","Browser","isSafari","isIE","isEdge","isUiWebView","test","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","extendedDefaults","_super","_this","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers_1","containerEl","newParams","touchEventsTouch","touchEventsDesktop","spv","breakLoop","translated","translateValue","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","disconnect","Observer$1","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","handle","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","returnValue","enable","eventsTarged","disable","Pagination","pagination","current","total","paginationType","bullets","firstIndex_1","lastIndex_1","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","lockClass","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","hideOnClick","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","click","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","setDragPosition","pointerPosition","positionRatio","clientX","clientY","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragClass","dragEl","draggable","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$slideEl","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","onGestureChange","scaleMove","currentScale","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","touchStart","touchEnd","doubleTap","Autoplay","run","$activeSlideEl","reverseDirection","stopOnLastSlide","running","pause","paused","waitForTransition","disableOnInteraction","beforeTransitionStart","sliderFirstMove"],"mappings":"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","file":"js/chunk-2d0e907b.8c17d2b7.js","sourcesContent":["import * as tslib_1 from '../polyfills/tslib.js';\n/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() { },\n    removeEventListener: function removeEventListener() { },\n    activeElement: {\n        blur: function blur() { },\n        nodeName: '',\n    },\n    querySelector: function querySelector() {\n        return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n        return [];\n    },\n    getElementById: function getElementById() {\n        return null;\n    },\n    createEvent: function createEvent() {\n        return {\n            initEvent: function initEvent() { },\n        };\n    },\n    createElement: function createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute: function setAttribute() { },\n            getElementsByTagName: function getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    location: { hash: '' },\n} : document; // eslint-disable-line\nvar win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n        userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener: function addEventListener() { },\n    removeEventListener: function removeEventListener() { },\n    getComputedStyle: function getComputedStyle() {\n        return {\n            getPropertyValue: function getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image: function Image() { },\n    Date: function Date() { },\n    screen: {},\n    setTimeout: function setTimeout() { },\n    clearTimeout: function clearTimeout() { },\n} : window; // eslint-disable-line\n/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nvar Dom7 = /** @class */ (function () {\n    function Dom7(arr) {\n        var self = this;\n        // Create array-like object\n        for (var i = 0; i < arr.length; i += 1) {\n            self[i] = arr[i];\n        }\n        self.length = arr.length;\n        // Return collection with methods\n        return this;\n    }\n    return Dom7;\n}());\nfunction $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n        if (selector instanceof Dom7) {\n            return selector;\n        }\n    }\n    if (selector) {\n        // String\n        if (typeof selector === 'string') {\n            var els = void 0;\n            var tempParent = void 0;\n            var html_1 = selector.trim();\n            if (html_1.indexOf('<') >= 0 && html_1.indexOf('>') >= 0) {\n                var toCreate = 'div';\n                if (html_1.indexOf('<li') === 0)\n                    toCreate = 'ul';\n                if (html_1.indexOf('<tr') === 0)\n                    toCreate = 'tbody';\n                if (html_1.indexOf('<td') === 0 || html_1.indexOf('<th') === 0)\n                    toCreate = 'tr';\n                if (html_1.indexOf('<tbody') === 0)\n                    toCreate = 'table';\n                if (html_1.indexOf('<option') === 0)\n                    toCreate = 'select';\n                tempParent = doc.createElement(toCreate);\n                tempParent.innerHTML = html_1;\n                for (i = 0; i < tempParent.childNodes.length; i += 1) {\n                    arr.push(tempParent.childNodes[i]);\n                }\n            }\n            else {\n                if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n                    // Pure ID selector\n                    els = [doc.getElementById(selector.trim().split('#')[1])];\n                }\n                else {\n                    // Other selectors\n                    els = (context || doc).querySelectorAll(selector.trim());\n                }\n                for (i = 0; i < els.length; i += 1) {\n                    if (els[i])\n                        arr.push(els[i]);\n                }\n            }\n        }\n        else if (selector.nodeType || selector === win || selector === doc) {\n            // Node/element\n            arr.push(selector);\n        }\n        else if (selector.length > 0 && selector[0].nodeType) {\n            // Array of elements or instance of Dom\n            for (i = 0; i < selector.length; i += 1) {\n                arr.push(selector[i]);\n            }\n        }\n    }\n    return new Dom7(arr);\n}\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\nfunction unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n        if (uniqueArray.indexOf(arr[i]) === -1)\n            uniqueArray.push(arr[i]);\n    }\n    return uniqueArray;\n}\n// Classes and attributes\nfunction addClass(className) {\n    if (typeof className === 'undefined') {\n        return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\n                this[j].classList.add(classes[i]);\n        }\n    }\n    return this;\n}\nfunction removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\n                this[j].classList.remove(classes[i]);\n        }\n    }\n    return this;\n}\nfunction hasClass(className) {\n    if (!this[0])\n        return false;\n    return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n            if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined')\n                this[j].classList.toggle(classes[i]);\n        }\n    }\n    return this;\n}\nfunction attr(attrs, value) {\n    if (arguments.length === 1 && typeof attrs === 'string') {\n        // Get attr\n        if (this[0])\n            return this[0].getAttribute(attrs);\n        return undefined;\n    }\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n        if (arguments.length === 2) {\n            // String\n            this[i].setAttribute(attrs, value);\n        }\n        else {\n            // Object\n            // eslint-disable-next-line\n            for (var attrName in attrs) {\n                this[i][attrName] = attrs[attrName];\n                this[i].setAttribute(attrName, attrs[attrName]);\n            }\n        }\n    }\n    return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n        this[i].removeAttribute(attr);\n    }\n    return this;\n}\nfunction data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n        el = this[0];\n        // Get value\n        if (el) {\n            if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n                return el.dom7ElementDataStorage[key];\n            }\n            var dataKey = el.getAttribute(\"data-\" + key);\n            if (dataKey) {\n                return dataKey;\n            }\n            return undefined;\n        }\n        return undefined;\n    }\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n        el = this[i];\n        if (!el.dom7ElementDataStorage)\n            el.dom7ElementDataStorage = {};\n        el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n        var elStyle = this[i].style;\n        elStyle.webkitTransform = transform;\n        elStyle.transform = transform;\n    }\n    return this;\n}\nfunction transition(duration) {\n    if (typeof duration !== 'string') {\n        duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n        var elStyle = this[i].style;\n        elStyle.webkitTransitionDuration = duration;\n        elStyle.transitionDuration = duration;\n    }\n    return this;\n}\n// Events\nfunction on() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];\n    if (typeof args[1] === 'function') {\n        eventType = args[0], listener = args[1], capture = args[2];\n        targetSelector = undefined;\n    }\n    if (!capture)\n        capture = false;\n    function handleLiveEvent(e) {\n        var target = e.target;\n        if (!target)\n            return;\n        var eventData = e.target.dom7EventData || [];\n        if (eventData.indexOf(e) < 0) {\n            eventData.unshift(e);\n        }\n        if ($(target).is(targetSelector))\n            listener.apply(target, eventData);\n        else {\n            var parents_1 = $(target).parents(); // eslint-disable-line\n            for (var k = 0; k < parents_1.length; k += 1) {\n                if ($(parents_1[k]).is(targetSelector))\n                    listener.apply(parents_1[k], eventData);\n            }\n        }\n    }\n    function handleEvent(e) {\n        var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n        if (eventData.indexOf(e) < 0) {\n            eventData.unshift(e);\n        }\n        listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n        var el = this[i];\n        if (!targetSelector) {\n            for (j = 0; j < events.length; j += 1) {\n                var event = events[j];\n                if (!el.dom7Listeners)\n                    el.dom7Listeners = {};\n                if (!el.dom7Listeners[event])\n                    el.dom7Listeners[event] = [];\n                el.dom7Listeners[event].push({\n                    listener: listener,\n                    proxyListener: handleEvent,\n                });\n                el.addEventListener(event, handleEvent, capture);\n            }\n        }\n        else {\n            // Live events\n            for (j = 0; j < events.length; j += 1) {\n                var event = events[j];\n                if (!el.dom7LiveListeners)\n                    el.dom7LiveListeners = {};\n                if (!el.dom7LiveListeners[event])\n                    el.dom7LiveListeners[event] = [];\n                el.dom7LiveListeners[event].push({\n                    listener: listener,\n                    proxyListener: handleLiveEvent,\n                });\n                el.addEventListener(event, handleLiveEvent, capture);\n            }\n        }\n    }\n    return this;\n}\nfunction off() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];\n    if (typeof args[1] === 'function') {\n        eventType = args[0], listener = args[1], capture = args[2];\n        targetSelector = undefined;\n    }\n    if (!capture)\n        capture = false;\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n        var event = events[i];\n        for (var j = 0; j < this.length; j += 1) {\n            var el = this[j];\n            var handlers = void 0;\n            if (!targetSelector && el.dom7Listeners) {\n                handlers = el.dom7Listeners[event];\n            }\n            else if (targetSelector && el.dom7LiveListeners) {\n                handlers = el.dom7LiveListeners[event];\n            }\n            if (handlers && handlers.length) {\n                for (var k = handlers.length - 1; k >= 0; k -= 1) {\n                    var handler = handlers[k];\n                    if (listener && handler.listener === listener) {\n                        el.removeEventListener(event, handler.proxyListener, capture);\n                        handlers.splice(k, 1);\n                    }\n                    else if (!listener) {\n                        el.removeEventListener(event, handler.proxyListener, capture);\n                        handlers.splice(k, 1);\n                    }\n                }\n            }\n        }\n    }\n    return this;\n}\nfunction trigger() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n        var event = events[i];\n        for (var j = 0; j < this.length; j += 1) {\n            var el = this[j];\n            var evt = void 0;\n            try {\n                evt = new win.CustomEvent(event, {\n                    detail: eventData,\n                    bubbles: true,\n                    cancelable: true,\n                });\n            }\n            catch (e) {\n                evt = doc.createEvent('Event');\n                evt.initEvent(event, true, true);\n                evt.detail = eventData;\n            }\n            // eslint-disable-next-line\n            el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n            el.dispatchEvent(evt);\n            el.dom7EventData = [];\n            delete el.dom7EventData;\n        }\n    }\n    return this;\n}\nfunction transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n        /* jshint validthis:true */\n        if (e.target !== this)\n            return;\n        callback.call(this, e);\n        for (i = 0; i < events.length; i += 1) {\n            dom.off(events[i], fireCallBack);\n        }\n    }\n    if (callback) {\n        for (i = 0; i < events.length; i += 1) {\n            dom.on(events[i], fireCallBack);\n        }\n    }\n    return this;\n}\nfunction outerWidth(includeMargins) {\n    if (this.length > 0) {\n        if (includeMargins) {\n            // eslint-disable-next-line\n            var styles_1 = this.styles();\n            return this[0].offsetWidth + parseFloat(styles_1.getPropertyValue('margin-right')) + parseFloat(styles_1.getPropertyValue('margin-left'));\n        }\n        return this[0].offsetWidth;\n    }\n    return null;\n}\nfunction outerHeight(includeMargins) {\n    if (this.length > 0) {\n        if (includeMargins) {\n            // eslint-disable-next-line\n            var styles_2 = this.styles();\n            return this[0].offsetHeight + parseFloat(styles_2.getPropertyValue('margin-top')) + parseFloat(styles_2.getPropertyValue('margin-bottom'));\n        }\n        return this[0].offsetHeight;\n    }\n    return null;\n}\nfunction offset() {\n    if (this.length > 0) {\n        var el = this[0];\n        var box = el.getBoundingClientRect();\n        var body = doc.body;\n        var clientTop = el.clientTop || body.clientTop || 0;\n        var clientLeft = el.clientLeft || body.clientLeft || 0;\n        var scrollTop = el === win ? win.scrollY : el.scrollTop;\n        var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n        return {\n            top: (box.top + scrollTop) - clientTop,\n            left: (box.left + scrollLeft) - clientLeft,\n        };\n    }\n    return null;\n}\nfunction styles() {\n    if (this[0])\n        return win.getComputedStyle(this[0], null);\n    return {};\n}\nfunction css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n        if (typeof props === 'string') {\n            if (this[0])\n                return win.getComputedStyle(this[0], null).getPropertyValue(props);\n        }\n        else {\n            for (i = 0; i < this.length; i += 1) {\n                // eslint-disable-next-line\n                for (var prop in props) {\n                    this[i].style[prop] = props[prop];\n                }\n            }\n            return this;\n        }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n        for (i = 0; i < this.length; i += 1) {\n            this[i].style[props] = value;\n        }\n        return this;\n    }\n    return this;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback)\n        return this;\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n        // If the callback returns false\n        if (callback.call(this[i], i, this[i]) === false) {\n            // End the loop early\n            return this;\n        }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n}\n// eslint-disable-next-line\nfunction html(html) {\n    if (typeof html === 'undefined') {\n        return this[0] ? this[0].innerHTML : undefined;\n    }\n    for (var i = 0; i < this.length; i += 1) {\n        this[i].innerHTML = html;\n    }\n    return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n    if (typeof text === 'undefined') {\n        if (this[0]) {\n            return this[0].textContent.trim();\n        }\n        return null;\n    }\n    for (var i = 0; i < this.length; i += 1) {\n        this[i].textContent = text;\n    }\n    return this;\n}\nfunction is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined')\n        return false;\n    if (typeof selector === 'string') {\n        if (el.matches)\n            return el.matches(selector);\n        else if (el.webkitMatchesSelector)\n            return el.webkitMatchesSelector(selector);\n        else if (el.msMatchesSelector)\n            return el.msMatchesSelector(selector);\n        compareWith = $(selector);\n        for (i = 0; i < compareWith.length; i += 1) {\n            if (compareWith[i] === el)\n                return true;\n        }\n        return false;\n    }\n    else if (selector === doc)\n        return el === doc;\n    else if (selector === win)\n        return el === win;\n    if (selector.nodeType || selector instanceof Dom7) {\n        compareWith = selector.nodeType ? [selector] : selector;\n        for (i = 0; i < compareWith.length; i += 1) {\n            if (compareWith[i] === el)\n                return true;\n        }\n        return false;\n    }\n    return false;\n}\nfunction index() {\n    var child = this[0];\n    var i;\n    if (child) {\n        i = 0;\n        // eslint-disable-next-line\n        while ((child = child.previousSibling) !== null) {\n            if (child.nodeType === 1)\n                i += 1;\n        }\n        return i;\n    }\n    return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n    if (typeof index === 'undefined')\n        return this;\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n        return new Dom7([]);\n    }\n    if (index < 0) {\n        returnIndex = length + index;\n        if (returnIndex < 0)\n            return new Dom7([]);\n        return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n}\nfunction append() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var newChild;\n    for (var k = 0; k < args.length; k += 1) {\n        newChild = args[k];\n        for (var i = 0; i < this.length; i += 1) {\n            if (typeof newChild === 'string') {\n                var tempDiv = doc.createElement('div');\n                tempDiv.innerHTML = newChild;\n                while (tempDiv.firstChild) {\n                    this[i].appendChild(tempDiv.firstChild);\n                }\n            }\n            else if (newChild instanceof Dom7) {\n                for (var j = 0; j < newChild.length; j += 1) {\n                    this[i].appendChild(newChild[j]);\n                }\n            }\n            else {\n                this[i].appendChild(newChild);\n            }\n        }\n    }\n    return this;\n}\nfunction prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n            var tempDiv = doc.createElement('div');\n            tempDiv.innerHTML = newChild;\n            for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n                this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n            }\n        }\n        else if (newChild instanceof Dom7) {\n            for (j = 0; j < newChild.length; j += 1) {\n                this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n            }\n        }\n        else {\n            this[i].insertBefore(newChild, this[i].childNodes[0]);\n        }\n    }\n    return this;\n}\nfunction next(selector) {\n    if (this.length > 0) {\n        if (selector) {\n            if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n                return new Dom7([this[0].nextElementSibling]);\n            }\n            return new Dom7([]);\n        }\n        if (this[0].nextElementSibling)\n            return new Dom7([this[0].nextElementSibling]);\n        return new Dom7([]);\n    }\n    return new Dom7([]);\n}\nfunction nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el)\n        return new Dom7([]);\n    while (el.nextElementSibling) {\n        var next_1 = el.nextElementSibling; // eslint-disable-line\n        if (selector) {\n            if ($(next_1).is(selector))\n                nextEls.push(next_1);\n        }\n        else\n            nextEls.push(next_1);\n        el = next_1;\n    }\n    return new Dom7(nextEls);\n}\nfunction prev(selector) {\n    if (this.length > 0) {\n        var el = this[0];\n        if (selector) {\n            if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n                return new Dom7([el.previousElementSibling]);\n            }\n            return new Dom7([]);\n        }\n        if (el.previousElementSibling)\n            return new Dom7([el.previousElementSibling]);\n        return new Dom7([]);\n    }\n    return new Dom7([]);\n}\nfunction prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el)\n        return new Dom7([]);\n    while (el.previousElementSibling) {\n        var prev_1 = el.previousElementSibling; // eslint-disable-line\n        if (selector) {\n            if ($(prev_1).is(selector))\n                prevEls.push(prev_1);\n        }\n        else\n            prevEls.push(prev_1);\n        el = prev_1;\n    }\n    return new Dom7(prevEls);\n}\nfunction parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode !== null) {\n            if (selector) {\n                if ($(this[i].parentNode).is(selector))\n                    parents.push(this[i].parentNode);\n            }\n            else {\n                parents.push(this[i].parentNode);\n            }\n        }\n    }\n    return $(unique(parents));\n}\nfunction parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n        var parent_1 = this[i].parentNode; // eslint-disable-line\n        while (parent_1) {\n            if (selector) {\n                if ($(parent_1).is(selector))\n                    parents.push(parent_1);\n            }\n            else {\n                parents.push(parent_1);\n            }\n            parent_1 = parent_1.parentNode;\n        }\n    }\n    return $(unique(parents));\n}\nfunction closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n        return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n        closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n}\nfunction find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n        var found = this[i].querySelectorAll(selector);\n        for (var j = 0; j < found.length; j += 1) {\n            foundElements.push(found[j]);\n        }\n    }\n    return new Dom7(foundElements);\n}\nfunction children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n        var childNodes = this[i].childNodes;\n        for (var j = 0; j < childNodes.length; j += 1) {\n            if (!selector) {\n                if (childNodes[j].nodeType === 1)\n                    children.push(childNodes[j]);\n            }\n            else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n                children.push(childNodes[j]);\n            }\n        }\n    }\n    return new Dom7(unique(children));\n}\nfunction remove() {\n    for (var i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode)\n            this[i].parentNode.removeChild(this[i]);\n    }\n    return this;\n}\nfunction add() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n        var toAdd = $(args[i]);\n        for (j = 0; j < toAdd.length; j += 1) {\n            dom[dom.length] = toAdd[j];\n            dom.length += 1;\n        }\n    }\n    return dom;\n}\n/**\n * Swiper 4.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 14, 2018\n */\nvar Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n};\nObject.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n});\nvar Utils = {\n    deleteProps: function (obj) {\n        var object = obj;\n        Object.keys(object).forEach(function (key) {\n            try {\n                object[key] = null;\n            }\n            catch (e) {\n                // no getter for object\n            }\n            try {\n                delete object[key];\n            }\n            catch (e) {\n                // something got wrong\n            }\n        });\n    },\n    nextTick: function (callback, delay) {\n        if (delay === void 0) { delay = 0; }\n        return setTimeout(callback, delay);\n    },\n    now: function () {\n        return Date.now();\n    },\n    getTranslate: function (el, axis) {\n        if (axis === void 0) { axis = 'x'; }\n        var matrix;\n        var curTransform;\n        var transformMatrix;\n        var curStyle = win.getComputedStyle(el, null);\n        if (win.WebKitCSSMatrix) {\n            curTransform = curStyle.transform || curStyle.webkitTransform;\n            if (curTransform.split(',').length > 6) {\n                curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n            }\n            // Some old versions of Webkit choke when 'none' is passed; pass\n            // empty string instead in this case\n            transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n        }\n        else {\n            transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n            matrix = transformMatrix.toString().split(',');\n        }\n        if (axis === 'x') {\n            // Latest Chrome and webkits Fix\n            if (win.WebKitCSSMatrix)\n                curTransform = transformMatrix.m41;\n            // Crazy IE10 Matrix\n            else if (matrix.length === 16)\n                curTransform = parseFloat(matrix[12]);\n            // Normal Browsers\n            else\n                curTransform = parseFloat(matrix[4]);\n        }\n        if (axis === 'y') {\n            // Latest Chrome and webkits Fix\n            if (win.WebKitCSSMatrix)\n                curTransform = transformMatrix.m42;\n            // Crazy IE10 Matrix\n            else if (matrix.length === 16)\n                curTransform = parseFloat(matrix[13]);\n            // Normal Browsers\n            else\n                curTransform = parseFloat(matrix[5]);\n        }\n        return curTransform || 0;\n    },\n    parseUrlQuery: function (url) {\n        var query = {};\n        var urlToParse = url || win.location.href;\n        var i;\n        var params;\n        var param;\n        var length;\n        if (typeof urlToParse === 'string' && urlToParse.length) {\n            urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n            params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n            length = params.length;\n            for (i = 0; i < length; i += 1) {\n                param = params[i].replace(/#\\S+/g, '').split('=');\n                query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n            }\n        }\n        return query;\n    },\n    isObject: function (o) {\n        return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = Object(args[0]);\n        for (var i = 1; i < args.length; i += 1) {\n            var nextSource = args[i];\n            if (nextSource !== undefined && nextSource !== null) {\n                var keysArray = Object.keys(Object(nextSource));\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                    if (desc !== undefined && desc.enumerable) {\n                        if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                            Utils.extend(to[nextKey], nextSource[nextKey]);\n                        }\n                        else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                            to[nextKey] = {};\n                            Utils.extend(to[nextKey], nextSource[nextKey]);\n                        }\n                        else {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n        }\n        return to;\n    },\n};\nvar Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n        touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n            return !!(('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n        }()),\n        pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),\n        prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n        transition: (function checkTransition() {\n            var style = testDiv.style;\n            return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n        }()),\n        transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n            var style = testDiv.style;\n            return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n        }()),\n        flexbox: (function checkFlexbox() {\n            var style = testDiv.style;\n            var styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n            for (var i = 0; i < styles$$1.length; i += 1) {\n                if (styles$$1[i] in style)\n                    return true;\n            }\n            return false;\n        }()),\n        observer: (function checkObserver() {\n            return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n        }()),\n        passiveListener: (function checkPassiveListener() {\n            var supportsPassive = false;\n            try {\n                var opts = Object.defineProperty({}, 'passive', {\n                    // eslint-disable-next-line\n                    get: function () {\n                        supportsPassive = true;\n                    },\n                });\n                win.addEventListener('testPassiveListener', null, opts);\n            }\n            catch (e) {\n                // No support\n            }\n            return supportsPassive;\n        }()),\n        gestures: (function checkGestures() {\n            return 'ongesturestart' in win;\n        }()),\n    };\n}());\nvar SwiperClass = /** @class */ (function () {\n    function SwiperClass(params) {\n        if (params === void 0) { params = {}; }\n        var self = this;\n        self.params = params;\n        // Events\n        self.eventsListeners = {};\n        if (self.params && self.params.on) {\n            Object.keys(self.params.on).forEach(function (eventName) {\n                self.on(eventName, self.params.on[eventName]);\n            });\n        }\n    }\n    SwiperClass.prototype.on = function (events, handler, priority) {\n        var self = this;\n        if (typeof handler !== 'function')\n            return self;\n        var method = priority ? 'unshift' : 'push';\n        events.split(' ').forEach(function (event) {\n            if (!self.eventsListeners[event])\n                self.eventsListeners[event] = [];\n            self.eventsListeners[event][method](handler);\n        });\n        return self;\n    };\n    SwiperClass.prototype.once = function (events, handler, priority) {\n        var self = this;\n        if (typeof handler !== 'function')\n            return self;\n        function onceHandler() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            handler.apply(self, args);\n            self.off(events, onceHandler);\n        }\n        return self.on(events, onceHandler, priority);\n    };\n    SwiperClass.prototype.off = function (events, handler) {\n        var self = this;\n        if (!self.eventsListeners)\n            return self;\n        events.split(' ').forEach(function (event) {\n            if (typeof handler === 'undefined') {\n                self.eventsListeners[event] = [];\n            }\n            else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n                self.eventsListeners[event].forEach(function (eventHandler, index$$1) {\n                    if (eventHandler === handler) {\n                        self.eventsListeners[event].splice(index$$1, 1);\n                    }\n                });\n            }\n        });\n        return self;\n    };\n    SwiperClass.prototype.emit = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var self = this;\n        if (!self.eventsListeners)\n            return self;\n        var events;\n        var data$$1;\n        var context;\n        if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n            events = args[0];\n            data$$1 = args.slice(1, args.length);\n            context = self;\n        }\n        else {\n            events = args[0].events;\n            data$$1 = args[0].data;\n            context = args[0].context || self;\n        }\n        var eventsArray = Array.isArray(events) ? events : events.split(' ');\n        eventsArray.forEach(function (event) {\n            if (self.eventsListeners && self.eventsListeners[event]) {\n                var handlers_1 = [];\n                self.eventsListeners[event].forEach(function (eventHandler) {\n                    handlers_1.push(eventHandler);\n                });\n                handlers_1.forEach(function (eventHandler) {\n                    eventHandler.apply(context, data$$1);\n                });\n            }\n        });\n        return self;\n    };\n    SwiperClass.prototype.useModulesParams = function (instanceParams) {\n        var instance = this;\n        if (!instance.modules)\n            return;\n        Object.keys(instance.modules).forEach(function (moduleName) {\n            var module = instance.modules[moduleName];\n            // Extend params\n            if (module.params) {\n                Utils.extend(instanceParams, module.params);\n            }\n        });\n    };\n    SwiperClass.prototype.useModules = function (modulesParams) {\n        if (modulesParams === void 0) { modulesParams = {}; }\n        var instance = this;\n        if (!instance.modules)\n            return;\n        Object.keys(instance.modules).forEach(function (moduleName) {\n            var module = instance.modules[moduleName];\n            var moduleParams = modulesParams[moduleName] || {};\n            // Extend instance methods and props\n            if (module.instance) {\n                Object.keys(module.instance).forEach(function (modulePropName) {\n                    var moduleProp = module.instance[modulePropName];\n                    if (typeof moduleProp === 'function') {\n                        instance[modulePropName] = moduleProp.bind(instance);\n                    }\n                    else {\n                        instance[modulePropName] = moduleProp;\n                    }\n                });\n            }\n            // Add event listeners\n            if (module.on && instance.on) {\n                Object.keys(module.on).forEach(function (moduleEventName) {\n                    instance.on(moduleEventName, module.on[moduleEventName]);\n                });\n            }\n            // Module create callback\n            if (module.create) {\n                module.create.bind(instance)(moduleParams);\n            }\n        });\n    };\n    Object.defineProperty(SwiperClass, \"components\", {\n        set: function (components) {\n            var Class = this;\n            if (!Class.use)\n                return;\n            Class.use(components);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SwiperClass.installModule = function (module) {\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        var Class = this;\n        if (!Class.prototype.modules)\n            Class.prototype.modules = {};\n        var name = module.name || (Object.keys(Class.prototype.modules).length + \"_\" + Utils.now());\n        Class.prototype.modules[name] = module;\n        // Prototype\n        if (module.proto) {\n            Object.keys(module.proto).forEach(function (key) {\n                Class.prototype[key] = module.proto[key];\n            });\n        }\n        // Class\n        if (module.static) {\n            Object.keys(module.static).forEach(function (key) {\n                Class[key] = module.static[key];\n            });\n        }\n        // Callback\n        if (module.install) {\n            module.install.apply(Class, params);\n        }\n        return Class;\n    };\n    SwiperClass.use = function (module) {\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        var Class = this;\n        if (Array.isArray(module)) {\n            module.forEach(function (m) { return Class.installModule(m); });\n            return Class;\n        }\n        return Class.installModule.apply(Class, [module].concat(params));\n    };\n    return SwiperClass;\n}());\nfunction updateSize() {\n    var swiper = this;\n    var width$$1;\n    var height$$1;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n        width$$1 = swiper.params.width;\n    }\n    else {\n        width$$1 = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n        height$$1 = swiper.params.height;\n    }\n    else {\n        height$$1 = $el[0].clientHeight;\n    }\n    if ((width$$1 === 0 && swiper.isHorizontal()) || (height$$1 === 0 && swiper.isVertical())) {\n        return;\n    }\n    // Subtract paddings\n    width$$1 = width$$1 - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height$$1 = height$$1 - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n    Utils.extend(swiper, {\n        width: width$$1,\n        height: height$$1,\n        size: swiper.isHorizontal() ? width$$1 : height$$1,\n    });\n}\nfunction updateSlides() {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl, swiperSize = swiper.size, rtl = swiper.rtlTranslate, wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index$$1 = 0;\n    if (typeof swiperSize === 'undefined') {\n        return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n        spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n    swiper.virtualSize = -spaceBetween;\n    // reset margins\n    if (rtl)\n        slides.css({ marginLeft: '', marginTop: '' });\n    else\n        slides.css({ marginRight: '', marginBottom: '' });\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n        if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n            slidesNumberEvenToRows = slidesLength;\n        }\n        else {\n            slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n        }\n        if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n            slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n        }\n    }\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n    for (var i = 0; i < slidesLength; i += 1) {\n        slideSize = 0;\n        var slide_1 = slides.eq(i);\n        if (params.slidesPerColumn > 1) {\n            // Set slides order\n            var newSlideOrderIndex = void 0;\n            var column = void 0;\n            var row = void 0;\n            if (params.slidesPerColumnFill === 'column') {\n                column = Math.floor(i / slidesPerColumn);\n                row = i - (column * slidesPerColumn);\n                if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n                    row += 1;\n                    if (row >= slidesPerColumn) {\n                        row = 0;\n                        column += 1;\n                    }\n                }\n                newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n                slide_1\n                    .css({\n                    '-webkit-box-ordinal-group': newSlideOrderIndex,\n                    '-moz-box-ordinal-group': newSlideOrderIndex,\n                    '-ms-flex-order': newSlideOrderIndex,\n                    '-webkit-order': newSlideOrderIndex,\n                    order: newSlideOrderIndex,\n                });\n            }\n            else {\n                row = Math.floor(i / slidesPerRow);\n                column = i - (row * slidesPerRow);\n            }\n            slide_1\n                .css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), (row !== 0 && params.spaceBetween) && (params.spaceBetween + \"px\"))\n                .attr('data-swiper-column', column)\n                .attr('data-swiper-row', row);\n        }\n        if (slide_1.css('display') === 'none')\n            continue; // eslint-disable-line\n        if (params.slidesPerView === 'auto') {\n            var slideStyles = win.getComputedStyle(slide_1[0], null);\n            var currentTransform = slide_1[0].style.transform;\n            var currentWebKitTransform = slide_1[0].style.webkitTransform;\n            if (currentTransform) {\n                slide_1[0].style.transform = 'none';\n            }\n            if (currentWebKitTransform) {\n                slide_1[0].style.webkitTransform = 'none';\n            }\n            if (params.roundLengths) {\n                slideSize = swiper.isHorizontal()\n                    ? slide_1.outerWidth(true)\n                    : slide_1.outerHeight(true);\n            }\n            else {\n                // eslint-disable-next-line\n                if (swiper.isHorizontal()) {\n                    slideSize = slide_1[0].getBoundingClientRect().width\n                        + parseFloat(slideStyles.getPropertyValue('margin-left'))\n                        + parseFloat(slideStyles.getPropertyValue('margin-right'));\n                }\n                else {\n                    slideSize = slide_1[0].getBoundingClientRect().height\n                        + parseFloat(slideStyles.getPropertyValue('margin-top'))\n                        + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n                }\n            }\n            if (currentTransform) {\n                slide_1[0].style.transform = currentTransform;\n            }\n            if (currentWebKitTransform) {\n                slide_1[0].style.webkitTransform = currentWebKitTransform;\n            }\n            if (params.roundLengths)\n                slideSize = Math.floor(slideSize);\n        }\n        else {\n            slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n            if (params.roundLengths)\n                slideSize = Math.floor(slideSize);\n            if (slides[i]) {\n                if (swiper.isHorizontal()) {\n                    slides[i].style.width = slideSize + \"px\";\n                }\n                else {\n                    slides[i].style.height = slideSize + \"px\";\n                }\n            }\n        }\n        if (slides[i]) {\n            slides[i].swiperSlideSize = slideSize;\n        }\n        slidesSizesGrid.push(slideSize);\n        if (params.centeredSlides) {\n            slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n            if (prevSlideSize === 0 && i !== 0)\n                slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n            if (i === 0)\n                slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n            if (Math.abs(slidePosition) < 1 / 1000)\n                slidePosition = 0;\n            if (params.roundLengths)\n                slidePosition = Math.floor(slidePosition);\n            if ((index$$1) % params.slidesPerGroup === 0)\n                snapGrid.push(slidePosition);\n            slidesGrid.push(slidePosition);\n        }\n        else {\n            if (params.roundLengths)\n                slidePosition = Math.floor(slidePosition);\n            if ((index$$1) % params.slidesPerGroup === 0)\n                snapGrid.push(slidePosition);\n            slidesGrid.push(slidePosition);\n            slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index$$1 += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n        $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n        if (swiper.isHorizontal())\n            $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\n        else\n            $wrapperEl.css({ height: swiper.virtualSize + params.spaceBetween + \"px\" });\n    }\n    if (params.slidesPerColumn > 1) {\n        swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n        if (swiper.isHorizontal())\n            $wrapperEl.css({ width: swiper.virtualSize + params.spaceBetween + \"px\" });\n        else\n            $wrapperEl.css({ height: swiper.virtualSize + params.spaceBetween + \"px\" });\n        if (params.centeredSlides) {\n            newSlidesGrid = [];\n            for (var i = 0; i < snapGrid.length; i += 1) {\n                var slidesGridItem = snapGrid[i];\n                if (params.roundLengths)\n                    slidesGridItem = Math.floor(slidesGridItem);\n                if (snapGrid[i] < swiper.virtualSize + snapGrid[0])\n                    newSlidesGrid.push(slidesGridItem);\n            }\n            snapGrid = newSlidesGrid;\n        }\n    }\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i = 0; i < snapGrid.length; i += 1) {\n            var slidesGridItem = snapGrid[i];\n            if (params.roundLengths)\n                slidesGridItem = Math.floor(slidesGridItem);\n            if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n                newSlidesGrid.push(slidesGridItem);\n            }\n        }\n        snapGrid = newSlidesGrid;\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n            snapGrid.push(swiper.virtualSize - swiperSize);\n        }\n    }\n    if (snapGrid.length === 0)\n        snapGrid = [0];\n    if (params.spaceBetween !== 0) {\n        if (swiper.isHorizontal()) {\n            if (rtl)\n                slides.css({ marginLeft: spaceBetween + \"px\" });\n            else\n                slides.css({ marginRight: spaceBetween + \"px\" });\n        }\n        else\n            slides.css({ marginBottom: spaceBetween + \"px\" });\n    }\n    if (params.centerInsufficientSlides) {\n        var allSlidesSize_1 = 0;\n        slidesSizesGrid.forEach(function (slideSizeValue) {\n            allSlidesSize_1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize_1 -= params.spaceBetween;\n        if (allSlidesSize_1 < swiperSize) {\n            var allSlidesOffset_1 = (swiperSize - allSlidesSize_1) / 2;\n            snapGrid.forEach(function (snap, snapIndex) {\n                snapGrid[snapIndex] = snap - allSlidesOffset_1;\n            });\n            slidesGrid.forEach(function (snap, snapIndex) {\n                slidesGrid[snapIndex] = snap + allSlidesOffset_1;\n            });\n        }\n    }\n    Utils.extend(swiper, {\n        slides: slides,\n        snapGrid: snapGrid,\n        slidesGrid: slidesGrid,\n        slidesSizesGrid: slidesSizesGrid,\n    });\n    if (slidesLength !== previousSlidesLength) {\n        swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow)\n            swiper.checkOverflow();\n        swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n        swiper.emit('slidesGridLengthChange');\n    }\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n        swiper.updateSlidesOffset();\n    }\n}\nfunction updateAutoHeight(speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n        swiper.setTransition(speed);\n    }\n    else if (speed === true) {\n        swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n            var index$$1 = swiper.activeIndex + i;\n            if (index$$1 > swiper.slides.length)\n                break;\n            activeSlides.push(swiper.slides.eq(index$$1)[0]);\n        }\n    }\n    else {\n        activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n        if (typeof activeSlides[i] !== 'undefined') {\n            var height$$1 = activeSlides[i].offsetHeight;\n            newHeight = height$$1 > newHeight ? height$$1 : newHeight;\n        }\n    }\n    // Update Height\n    if (newHeight)\n        swiper.$wrapperEl.css('height', newHeight + \"px\");\n}\nfunction updateSlidesOffset() {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n        slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n}\nfunction updateSlidesProgress(translate) {\n    if (translate === void 0) { translate = (this && this.translate) || 0; }\n    var swiper = this;\n    var params = swiper.params;\n    var slides = swiper.slides, rtl = swiper.rtlTranslate;\n    if (slides.length === 0)\n        return;\n    if (typeof slides[0].swiperSlideOffset === 'undefined')\n        swiper.updateSlidesOffset();\n    var offsetCenter = -translate;\n    if (rtl)\n        offsetCenter = translate;\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n    for (var i = 0; i < slides.length; i += 1) {\n        var slide_2 = slides[i];\n        var slideProgress = ((offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide_2.swiperSlideOffset) / (slide_2.swiperSlideSize + params.spaceBetween);\n        if (params.watchSlidesVisibility) {\n            var slideBefore = -(offsetCenter - slide_2.swiperSlideOffset);\n            var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n            var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n            if (isVisible) {\n                swiper.visibleSlides.push(slide_2);\n                swiper.visibleSlidesIndexes.push(i);\n                slides.eq(i).addClass(params.slideVisibleClass);\n            }\n        }\n        slide_2.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n}\nfunction updateProgress(translate) {\n    if (translate === void 0) { translate = (this && this.translate) || 0; }\n    var swiper = this;\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress, isBeginning = swiper.isBeginning, isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n    }\n    else {\n        progress = (translate - swiper.minTranslate()) / (translatesDiff);\n        isBeginning = progress <= 0;\n        isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n        progress: progress,\n        isBeginning: isBeginning,\n        isEnd: isEnd,\n    });\n    if (params.watchSlidesProgress || params.watchSlidesVisibility)\n        swiper.updateSlidesProgress(translate);\n    if (isBeginning && !wasBeginning) {\n        swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n        swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n        swiper.emit('fromEdge');\n    }\n    swiper.emit('progress', progress);\n}\nfunction updateSlidesClasses() {\n    var swiper = this;\n    var slides = swiper.slides, params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex, realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n    var activeSlide;\n    if (isVirtual) {\n        activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\n    }\n    else {\n        activeSlide = slides.eq(activeIndex);\n    }\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n    if (params.loop) {\n        // Duplicate to all looped slides\n        if (activeSlide.hasClass(params.slideDuplicateClass)) {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\")\n                .addClass(params.slideDuplicateActiveClass);\n        }\n        else {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\")\n                .addClass(params.slideDuplicateActiveClass);\n        }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n        nextSlide = slides.eq(0);\n        nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n        prevSlide = slides.eq(-1);\n        prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n        // Duplicate to all looped slides\n        if (nextSlide.hasClass(params.slideDuplicateClass)) {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\")\n                .addClass(params.slideDuplicateNextClass);\n        }\n        else {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\")\n                .addClass(params.slideDuplicateNextClass);\n        }\n        if (prevSlide.hasClass(params.slideDuplicateClass)) {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\")\n                .addClass(params.slideDuplicatePrevClass);\n        }\n        else {\n            $wrapperEl\n                .children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\")\n                .addClass(params.slideDuplicatePrevClass);\n        }\n    }\n}\nfunction updateActiveIndex(newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid, params = swiper.params, previousIndex = swiper.activeIndex, previousRealIndex = swiper.realIndex, previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n        for (var i = 0; i < slidesGrid.length; i += 1) {\n            if (typeof slidesGrid[i + 1] !== 'undefined') {\n                if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n                    activeIndex = i;\n                }\n                else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n                    activeIndex = i + 1;\n                }\n            }\n            else if (translate >= slidesGrid[i]) {\n                activeIndex = i;\n            }\n        }\n        // Normalize slideIndex\n        if (params.normalizeSlideIndex) {\n            if (activeIndex < 0 || typeof activeIndex === 'undefined')\n                activeIndex = 0;\n        }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n        snapIndex = snapGrid.indexOf(translate);\n    }\n    else {\n        snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length)\n        snapIndex = snapGrid.length - 1;\n    if (activeIndex === previousIndex) {\n        if (snapIndex !== previousSnapIndex) {\n            swiper.snapIndex = snapIndex;\n            swiper.emit('snapIndexChange');\n        }\n        return;\n    }\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n    Utils.extend(swiper, {\n        snapIndex: snapIndex,\n        realIndex: realIndex,\n        previousIndex: previousIndex,\n        activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n        swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n}\nfunction updateClickedSlide(e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n    var slideFound = false;\n    if (slide) {\n        for (var i = 0; i < swiper.slides.length; i += 1) {\n            if (swiper.slides[i] === slide)\n                slideFound = true;\n        }\n    }\n    if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n            swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n        }\n        else {\n            swiper.clickedIndex = $(slide).index();\n        }\n    }\n    else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n        swiper.slideToClickedSlide();\n    }\n}\nvar update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n};\nfunction getTranslate(axis) {\n    if (axis === void 0) { axis = this.isHorizontal() ? 'x' : 'y'; }\n    var swiper = this;\n    var params = swiper.params, rtl = swiper.rtlTranslate, translate = swiper.translate, $wrapperEl = swiper.$wrapperEl;\n    if (params.virtualTranslate) {\n        return rtl ? -translate : translate;\n    }\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl)\n        currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n}\nfunction setTranslate(translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate, params = swiper.params, $wrapperEl = swiper.$wrapperEl, progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    if (swiper.isHorizontal()) {\n        x = rtl ? -translate : translate;\n    }\n    else {\n        y = translate;\n    }\n    if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n    }\n    if (!params.virtualTranslate) {\n        if (Support.transforms3d)\n            $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n        else\n            $wrapperEl.transform(\"translate(\" + x + \"px, \" + y + \"px)\");\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n        newProgress = 0;\n    }\n    else {\n        newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n        swiper.updateProgress(translate);\n    }\n    swiper.emit('setTranslate', swiper.translate, byController);\n}\nfunction minTranslate() {\n    return (-this.snapGrid[0]);\n}\nfunction maxTranslate() {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n}\nvar translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n};\nfunction setTransition(duration, byController) {\n    var swiper = this;\n    swiper.$wrapperEl.transition(duration);\n    swiper.emit('setTransition', duration, byController);\n}\nfunction transitionStart(runCallbacks, direction) {\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var activeIndex = swiper.activeIndex, params = swiper.params, previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n        swiper.updateAutoHeight();\n    }\n    var dir = direction;\n    if (!dir) {\n        if (activeIndex > previousIndex)\n            dir = 'next';\n        else if (activeIndex < previousIndex)\n            dir = 'prev';\n        else\n            dir = 'reset';\n    }\n    swiper.emit('transitionStart');\n    if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n            swiper.emit('slideResetTransitionStart');\n            return;\n        }\n        swiper.emit('slideChangeTransitionStart');\n        if (dir === 'next') {\n            swiper.emit('slideNextTransitionStart');\n        }\n        else {\n            swiper.emit('slidePrevTransitionStart');\n        }\n    }\n}\nfunction transitionEnd$1(runCallbacks, direction) {\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var activeIndex = swiper.activeIndex, previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n    var dir = direction;\n    if (!dir) {\n        if (activeIndex > previousIndex)\n            dir = 'next';\n        else if (activeIndex < previousIndex)\n            dir = 'prev';\n        else\n            dir = 'reset';\n    }\n    swiper.emit('transitionEnd');\n    if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n            swiper.emit('slideResetTransitionEnd');\n            return;\n        }\n        swiper.emit('slideChangeTransitionEnd');\n        if (dir === 'next') {\n            swiper.emit('slideNextTransitionEnd');\n        }\n        else {\n            swiper.emit('slidePrevTransitionEnd');\n        }\n    }\n}\nvar transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n};\nfunction slideTo(index$$1, speed, runCallbacks, internal) {\n    if (index$$1 === void 0) { index$$1 = 0; }\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var slideIndex = index$$1;\n    if (slideIndex < 0)\n        slideIndex = 0;\n    var params = swiper.params, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, previousIndex = swiper.previousIndex, activeIndex = swiper.activeIndex, rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n    }\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length)\n        snapIndex = snapGrid.length - 1;\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n        swiper.emit('beforeSlideChangeStart');\n    }\n    var translate = -snapGrid[snapIndex];\n    // Update progress\n    swiper.updateProgress(translate);\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n        for (var i = 0; i < slidesGrid.length; i += 1) {\n            if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n                slideIndex = i;\n            }\n        }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n            return false;\n        }\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n            if ((activeIndex || 0) !== slideIndex)\n                return false;\n        }\n    }\n    var direction;\n    if (slideIndex > activeIndex)\n        direction = 'next';\n    else if (slideIndex < activeIndex)\n        direction = 'prev';\n    else\n        direction = 'reset';\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n        swiper.updateActiveIndex(slideIndex);\n        // Update Height\n        if (params.autoHeight) {\n            swiper.updateAutoHeight();\n        }\n        swiper.updateSlidesClasses();\n        if (params.effect !== 'slide') {\n            swiper.setTranslate(translate);\n        }\n        if (direction !== 'reset') {\n            swiper.transitionStart(runCallbacks, direction);\n            swiper.transitionEnd(runCallbacks, direction);\n        }\n        return false;\n    }\n    if (speed === 0 || !Support.transition) {\n        swiper.setTransition(0);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n    }\n    else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n        if (!swiper.animating) {\n            swiper.animating = true;\n            if (!swiper.onSlideToWrapperTransitionEnd) {\n                swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n                    if (!swiper || swiper.destroyed)\n                        return;\n                    if (e.target !== this)\n                        return;\n                    swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n                    swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n                    swiper.onSlideToWrapperTransitionEnd = null;\n                    delete swiper.onSlideToWrapperTransitionEnd;\n                    swiper.transitionEnd(runCallbacks, direction);\n                };\n            }\n            swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        }\n    }\n    return true;\n}\nfunction slideToLoop(index$$1, speed, runCallbacks, internal) {\n    if (index$$1 === void 0) { index$$1 = 0; }\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var newIndex = index$$1;\n    if (swiper.params.loop) {\n        newIndex += swiper.loopedSlides;\n    }\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks, internal) {\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var params = swiper.params, animating = swiper.animating;\n    if (params.loop) {\n        if (animating)\n            return false;\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks, internal) {\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var params = swiper.params, animating = swiper.animating, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, rtlTranslate = swiper.rtlTranslate;\n    if (params.loop) {\n        if (animating)\n            return false;\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val$$1) {\n        if (val$$1 < 0)\n            return -Math.floor(Math.abs(val$$1));\n        return Math.floor(val$$1);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val$$1) { return normalize(val$$1); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val$$1) { return normalize(val$$1); });\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n        if (prevIndex < 0)\n            prevIndex = swiper.activeIndex - 1;\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks, internal) {\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks, internal) {\n    if (speed === void 0) { speed = this.params.speed; }\n    if (runCallbacks === void 0) { runCallbacks = true; }\n    var swiper = this;\n    var index$$1 = swiper.activeIndex;\n    var snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n    if (snapIndex < swiper.snapGrid.length - 1) {\n        var translate_1 = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n        var currentSnap = swiper.snapGrid[snapIndex];\n        var nextSnap = swiper.snapGrid[snapIndex + 1];\n        if ((translate_1 - currentSnap) > (nextSnap - currentSnap) / 2) {\n            index$$1 = swiper.params.slidesPerGroup;\n        }\n    }\n    return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\nfunction slideToClickedSlide() {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl;\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n        if (swiper.animating)\n            return;\n        realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n        if (params.centeredSlides) {\n            if ((slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n                || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))) {\n                swiper.loopFix();\n                slideToIndex = $wrapperEl\n                    .children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\")\n                    .eq(0)\n                    .index();\n                Utils.nextTick(function () {\n                    swiper.slideTo(slideToIndex);\n                });\n            }\n            else {\n                swiper.slideTo(slideToIndex);\n            }\n        }\n        else if (slideToIndex > swiper.slides.length - slidesPerView) {\n            swiper.loopFix();\n            slideToIndex = $wrapperEl\n                .children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\")\n                .eq(0)\n                .index();\n            Utils.nextTick(function () {\n                swiper.slideTo(slideToIndex);\n            });\n        }\n        else {\n            swiper.slideTo(slideToIndex);\n        }\n    }\n    else {\n        swiper.slideTo(slideToIndex);\n    }\n}\nvar slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n};\nfunction loopCreate() {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n    var slides = $wrapperEl.children(\".\" + params.slideClass);\n    if (params.loopFillGroupWithBlank) {\n        var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n        if (blankSlidesNum !== params.slidesPerGroup) {\n            for (var i = 0; i < blankSlidesNum; i += 1) {\n                var blankNode = $(doc.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\n                $wrapperEl.append(blankNode);\n            }\n            slides = $wrapperEl.children(\".\" + params.slideClass);\n        }\n    }\n    if (params.slidesPerView === 'auto' && !params.loopedSlides)\n        params.loopedSlides = slides.length;\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n        swiper.loopedSlides = slides.length;\n    }\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index$$1, el) {\n        var slide = $(el);\n        if (index$$1 < swiper.loopedSlides)\n            appendSlides.push(el);\n        if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides)\n            prependSlides.push(el);\n        slide.attr('data-swiper-slide-index', index$$1);\n    });\n    for (var i = 0; i < appendSlides.length; i += 1) {\n        $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i = prependSlides.length - 1; i >= 0; i -= 1) {\n        $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n}\nfunction loopFix() {\n    var swiper = this;\n    var params = swiper.params, activeIndex = swiper.activeIndex, slides = swiper.slides, loopedSlides = swiper.loopedSlides, allowSlidePrev = swiper.allowSlidePrev, allowSlideNext = swiper.allowSlideNext, snapGrid = swiper.snapGrid, rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n        newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n        newIndex += loopedSlides;\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n        if (slideChanged && diff !== 0) {\n            swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n    }\n    else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n        // Fix For Positive Oversliding\n        newIndex = -slides.length + activeIndex + loopedSlides;\n        newIndex += loopedSlides;\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n        if (slideChanged && diff !== 0) {\n            swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n}\nfunction loopDestroy() {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params, slides = swiper.slides;\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n    slides.removeAttr('data-swiper-slide-index');\n}\nvar loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n};\nfunction setGrabCursor(moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked))\n        return;\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n}\nfunction unsetGrabCursor() {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked))\n        return;\n    swiper.el.style.cursor = '';\n}\nvar grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n};\nfunction appendSlide(slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params;\n    if (params.loop) {\n        swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i])\n                $wrapperEl.append(slides[i]);\n        }\n    }\n    else {\n        $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n        swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n        swiper.update();\n    }\n}\nfunction prependSlide(slides) {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\n    if (params.loop) {\n        swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i])\n                $wrapperEl.prepend(slides[i]);\n        }\n        newActiveIndex = activeIndex + slides.length;\n    }\n    else {\n        $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n        swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n        swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n}\nfunction addSlide(index$$1, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params, activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n    var baseLength = swiper.slides.length;\n    if (index$$1 <= 0) {\n        swiper.prependSlide(slides);\n        return;\n    }\n    if (index$$1 >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n    }\n    var newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index$$1; i -= 1) {\n        var currentSlide = swiper.slides.eq(i);\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i])\n                $wrapperEl.append(slides[i]);\n        }\n        newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    }\n    else {\n        $wrapperEl.append(slides);\n    }\n    for (var i = 0; i < slidesBuffer.length; i += 1) {\n        $wrapperEl.append(slidesBuffer[i]);\n    }\n    if (params.loop) {\n        swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n        swiper.update();\n    }\n    if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    }\n    else {\n        swiper.slideTo(newActiveIndex, 0, false);\n    }\n}\nfunction removeSlide(slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n        for (var i = 0; i < slidesIndexes.length; i += 1) {\n            indexToRemove = slidesIndexes[i];\n            if (swiper.slides[indexToRemove])\n                swiper.slides.eq(indexToRemove).remove();\n            if (indexToRemove < newActiveIndex)\n                newActiveIndex -= 1;\n        }\n        newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n    else {\n        indexToRemove = slidesIndexes;\n        if (swiper.slides[indexToRemove])\n            swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex)\n            newActiveIndex -= 1;\n        newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n    if (params.loop) {\n        swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n        swiper.update();\n    }\n    if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    }\n    else {\n        swiper.slideTo(newActiveIndex, 0, false);\n    }\n}\nfunction removeAllSlides() {\n    var swiper = this;\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n        slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n}\nvar manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n};\nvar Device = (function Device() {\n    var ua = win.navigator.userAgent;\n    var device = {\n        ios: false,\n        android: false,\n        androidChrome: false,\n        desktop: false,\n        windows: false,\n        iphone: false,\n        ipod: false,\n        ipad: false,\n        cordova: win.cordova || win.phonegap,\n        phonegap: win.cordova || win.phonegap,\n    };\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    // Windows\n    if (windows) {\n        device.os = 'windows';\n        device.osVersion = windows[2];\n        device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n        device.os = 'android';\n        device.osVersion = android[2];\n        device.android = true;\n        device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n        device.os = 'ios';\n        device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n        device.osVersion = iphone[2].replace(/_/g, '.');\n        device.iphone = true;\n    }\n    if (ipad) {\n        device.osVersion = ipad[2].replace(/_/g, '.');\n        device.ipad = true;\n    }\n    if (ipod) {\n        device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n        if (device.osVersion.split('.')[0] === '10') {\n            device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n        }\n    }\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n        var osVersionArr = device.osVersion.split('.');\n        var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n        device.minimalUi = !device.webView\n            && (ipod || iphone)\n            && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n            && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n    // Export object\n    return device;\n}());\nfunction onTouchStart(event) {\n    var swiper = this;\n    var data$$1 = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n        return;\n    }\n    var e = event;\n    if (e.originalEvent)\n        e = e.originalEvent;\n    data$$1.isTouchEvent = e.type === 'touchstart';\n    if (!data$$1.isTouchEvent && 'which' in e && e.which === 3)\n        return;\n    if (!data$$1.isTouchEvent && 'button' in e && e.button > 0)\n        return;\n    if (data$$1.isTouched && data$$1.isMoved)\n        return;\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\n        swiper.allowClick = true;\n        return;\n    }\n    if (params.swipeHandler) {\n        if (!$(e).closest(params.swipeHandler)[0])\n            return;\n    }\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (edgeSwipeDetection\n        && ((startX <= edgeSwipeThreshold)\n            || (startX >= win.screen.width - edgeSwipeThreshold))) {\n        return;\n    }\n    Utils.extend(data$$1, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined,\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data$$1.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0)\n        data$$1.allowThresholdMove = false;\n    if (e.type !== 'touchstart') {\n        var preventDefault = true;\n        if ($(e.target).is(data$$1.formElements))\n            preventDefault = false;\n        if (doc.activeElement\n            && $(doc.activeElement).is(data$$1.formElements)\n            && doc.activeElement !== e.target) {\n            doc.activeElement.blur();\n        }\n        if (preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault) {\n            e.preventDefault();\n        }\n    }\n    swiper.emit('touchStart', e);\n}\nfunction onTouchMove(event) {\n    var swiper = this;\n    var data$$1 = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent)\n        e = e.originalEvent;\n    if (!data$$1.isTouched) {\n        if (data$$1.startMoving && data$$1.isScrolling) {\n            swiper.emit('touchMoveOpposite', e);\n        }\n        return;\n    }\n    if (data$$1.isTouchEvent && e.type === 'mousemove')\n        return;\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n    }\n    if (!swiper.allowTouchMove) {\n        // isMoved = true;\n        swiper.allowClick = false;\n        if (data$$1.isTouched) {\n            Utils.extend(touches, {\n                startX: pageX,\n                startY: pageY,\n                currentX: pageX,\n                currentY: pageY,\n            });\n            data$$1.touchStartTime = Utils.now();\n        }\n        return;\n    }\n    if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) {\n            // Vertical\n            if ((pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n                || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())) {\n                data$$1.isTouched = false;\n                data$$1.isMoved = false;\n                return;\n            }\n        }\n        else if ((pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n            || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())) {\n            return;\n        }\n    }\n    if (data$$1.isTouchEvent && doc.activeElement) {\n        if (e.target === doc.activeElement && $(e.target).is(data$$1.formElements)) {\n            data$$1.isMoved = true;\n            swiper.allowClick = false;\n            return;\n        }\n    }\n    if (data$$1.allowTouchCallbacks) {\n        swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1)\n        return;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow(diffX, 2)) + (Math.pow(diffY, 2))) < swiper.params.threshold)\n        return;\n    if (typeof data$$1.isScrolling === 'undefined') {\n        var touchAngle = void 0;\n        if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n            data$$1.isScrolling = false;\n        }\n        else {\n            // eslint-disable-next-line\n            if ((diffX * diffX) + (diffY * diffY) >= 25) {\n                touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n                data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n            }\n        }\n    }\n    if (data$$1.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data$$1.startMoving === 'undefined') {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n            data$$1.startMoving = true;\n        }\n    }\n    if (data$$1.isScrolling) {\n        data$$1.isTouched = false;\n        return;\n    }\n    if (!data$$1.startMoving) {\n        return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n        e.stopPropagation();\n    }\n    if (!data$$1.isMoved) {\n        if (params.loop) {\n            swiper.loopFix();\n        }\n        data$$1.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n        if (swiper.animating) {\n            swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n        }\n        data$$1.allowMomentumBounce = false;\n        // Grab Cursor\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n            swiper.setGrabCursor(true);\n        }\n        swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data$$1.isMoved = true;\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl)\n        diff = -diff;\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data$$1.currentTranslate = diff + data$$1.startTranslate;\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n        resistanceRatio = 0;\n    }\n    if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n        disableParentSwiper = false;\n        if (params.resistance)\n            data$$1.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow((-swiper.minTranslate() + data$$1.startTranslate + diff), resistanceRatio));\n    }\n    else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance)\n            data$$1.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow((swiper.maxTranslate() - data$$1.startTranslate - diff), resistanceRatio));\n    }\n    if (disableParentSwiper) {\n        e.preventedByNestedSwiper = true;\n    }\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n        data$$1.currentTranslate = data$$1.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n        data$$1.currentTranslate = data$$1.startTranslate;\n    }\n    // Threshold\n    if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n            if (!data$$1.allowThresholdMove) {\n                data$$1.allowThresholdMove = true;\n                touches.startX = touches.currentX;\n                touches.startY = touches.currentY;\n                data$$1.currentTranslate = data$$1.startTranslate;\n                touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n                return;\n            }\n        }\n        else {\n            data$$1.currentTranslate = data$$1.startTranslate;\n            return;\n        }\n    }\n    if (!params.followFinger)\n        return;\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n        // Velocity\n        if (data$$1.velocities.length === 0) {\n            data$$1.velocities.push({\n                position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n                time: data$$1.touchStartTime,\n            });\n        }\n        data$$1.velocities.push({\n            position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n            time: Utils.now(),\n        });\n    }\n    // Update progress\n    swiper.updateProgress(data$$1.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data$$1.currentTranslate);\n}\nfunction onTouchEnd(event) {\n    var swiper = this;\n    var data$$1 = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, $wrapperEl = swiper.$wrapperEl, slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent)\n        e = e.originalEvent;\n    if (data$$1.allowTouchCallbacks) {\n        swiper.emit('touchEnd', e);\n    }\n    data$$1.allowTouchCallbacks = false;\n    if (!data$$1.isTouched) {\n        if (data$$1.isMoved && params.grabCursor) {\n            swiper.setGrabCursor(false);\n        }\n        data$$1.isMoved = false;\n        data$$1.startMoving = false;\n        return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(false);\n    }\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data$$1.touchStartTime;\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n        swiper.updateClickedSlide(e);\n        swiper.emit('tap', e);\n        if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n            if (data$$1.clickTimeout)\n                clearTimeout(data$$1.clickTimeout);\n            data$$1.clickTimeout = Utils.nextTick(function () {\n                if (!swiper || swiper.destroyed)\n                    return;\n                swiper.emit('click', e);\n            }, 300);\n        }\n        if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n            if (data$$1.clickTimeout)\n                clearTimeout(data$$1.clickTimeout);\n            swiper.emit('doubleTap', e);\n        }\n    }\n    data$$1.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n        if (!swiper.destroyed)\n            swiper.allowClick = true;\n    });\n    if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        data$$1.startMoving = false;\n        return;\n    }\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    var currentPos;\n    if (params.followFinger) {\n        currentPos = rtl ? swiper.translate : -swiper.translate;\n    }\n    else {\n        currentPos = -data$$1.currentTranslate;\n    }\n    if (params.freeMode) {\n        if (currentPos < -swiper.minTranslate()) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (currentPos > -swiper.maxTranslate()) {\n            if (swiper.slides.length < snapGrid.length) {\n                swiper.slideTo(snapGrid.length - 1);\n            }\n            else {\n                swiper.slideTo(swiper.slides.length - 1);\n            }\n            return;\n        }\n        if (params.freeModeMomentum) {\n            if (data$$1.velocities.length > 1) {\n                var lastMoveEvent = data$$1.velocities.pop();\n                var velocityEvent = data$$1.velocities.pop();\n                var distance = lastMoveEvent.position - velocityEvent.position;\n                var time = lastMoveEvent.time - velocityEvent.time;\n                swiper.velocity = distance / time;\n                swiper.velocity /= 2;\n                if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n                    swiper.velocity = 0;\n                }\n                // this implies that the user stopped moving a finger then released.\n                // There would be no events with distance zero, so the last event is stale.\n                if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n                    swiper.velocity = 0;\n                }\n            }\n            else {\n                swiper.velocity = 0;\n            }\n            swiper.velocity *= params.freeModeMomentumVelocityRatio;\n            data$$1.velocities.length = 0;\n            var momentumDuration = 1000 * params.freeModeMomentumRatio;\n            var momentumDistance = swiper.velocity * momentumDuration;\n            var newPosition = swiper.translate + momentumDistance;\n            if (rtl)\n                newPosition = -newPosition;\n            var doBounce = false;\n            var afterBouncePosition_1;\n            var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n            var needsLoopFix = void 0;\n            if (newPosition < swiper.maxTranslate()) {\n                if (params.freeModeMomentumBounce) {\n                    if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n                        newPosition = swiper.maxTranslate() - bounceAmount;\n                    }\n                    afterBouncePosition_1 = swiper.maxTranslate();\n                    doBounce = true;\n                    data$$1.allowMomentumBounce = true;\n                }\n                else {\n                    newPosition = swiper.maxTranslate();\n                }\n                if (params.loop && params.centeredSlides)\n                    needsLoopFix = true;\n            }\n            else if (newPosition > swiper.minTranslate()) {\n                if (params.freeModeMomentumBounce) {\n                    if (newPosition - swiper.minTranslate() > bounceAmount) {\n                        newPosition = swiper.minTranslate() + bounceAmount;\n                    }\n                    afterBouncePosition_1 = swiper.minTranslate();\n                    doBounce = true;\n                    data$$1.allowMomentumBounce = true;\n                }\n                else {\n                    newPosition = swiper.minTranslate();\n                }\n                if (params.loop && params.centeredSlides)\n                    needsLoopFix = true;\n            }\n            else if (params.freeModeSticky) {\n                var nextSlide = void 0;\n                for (var j = 0; j < snapGrid.length; j += 1) {\n                    if (snapGrid[j] > -newPosition) {\n                        nextSlide = j;\n                        break;\n                    }\n                }\n                if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n                    newPosition = snapGrid[nextSlide];\n                }\n                else {\n                    newPosition = snapGrid[nextSlide - 1];\n                }\n                newPosition = -newPosition;\n            }\n            if (needsLoopFix) {\n                swiper.once('transitionEnd', function () {\n                    swiper.loopFix();\n                });\n            }\n            // Fix duration\n            if (swiper.velocity !== 0) {\n                if (rtl) {\n                    momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n                }\n                else {\n                    momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n                }\n            }\n            else if (params.freeModeSticky) {\n                swiper.slideToClosest();\n                return;\n            }\n            if (params.freeModeMomentumBounce && doBounce) {\n                swiper.updateProgress(afterBouncePosition_1);\n                swiper.setTransition(momentumDuration);\n                swiper.setTranslate(newPosition);\n                swiper.transitionStart(true, swiper.swipeDirection);\n                swiper.animating = true;\n                $wrapperEl.transitionEnd(function () {\n                    if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce)\n                        return;\n                    swiper.emit('momentumBounce');\n                    swiper.setTransition(params.speed);\n                    swiper.setTranslate(afterBouncePosition_1);\n                    $wrapperEl.transitionEnd(function () {\n                        if (!swiper || swiper.destroyed)\n                            return;\n                        swiper.transitionEnd();\n                    });\n                });\n            }\n            else if (swiper.velocity) {\n                swiper.updateProgress(newPosition);\n                swiper.setTransition(momentumDuration);\n                swiper.setTranslate(newPosition);\n                swiper.transitionStart(true, swiper.swipeDirection);\n                if (!swiper.animating) {\n                    swiper.animating = true;\n                    $wrapperEl.transitionEnd(function () {\n                        if (!swiper || swiper.destroyed)\n                            return;\n                        swiper.transitionEnd();\n                    });\n                }\n            }\n            else {\n                swiper.updateProgress(newPosition);\n            }\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n        else if (params.freeModeSticky) {\n            swiper.slideToClosest();\n            return;\n        }\n        if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n        return;\n    }\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n        if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n            if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n                stopIndex = i;\n                groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n            }\n        }\n        else if (currentPos >= slidesGrid[i]) {\n            stopIndex = i;\n            groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n    }\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (swiper.swipeDirection === 'next') {\n            if (ratio >= params.longSwipesRatio)\n                swiper.slideTo(stopIndex + params.slidesPerGroup);\n            else\n                swiper.slideTo(stopIndex);\n        }\n        if (swiper.swipeDirection === 'prev') {\n            if (ratio > (1 - params.longSwipesRatio))\n                swiper.slideTo(stopIndex + params.slidesPerGroup);\n            else\n                swiper.slideTo(stopIndex);\n        }\n    }\n    else {\n        // Short swipes\n        if (!params.shortSwipes) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (swiper.swipeDirection === 'next') {\n            swiper.slideTo(stopIndex + params.slidesPerGroup);\n        }\n        if (swiper.swipeDirection === 'prev') {\n            swiper.slideTo(stopIndex);\n        }\n    }\n}\nfunction onResize() {\n    var swiper = this;\n    var params = swiper.params, el = swiper.el;\n    if (el && el.offsetWidth === 0)\n        return;\n    // Breakpoints\n    if (params.breakpoints) {\n        swiper.setBreakpoint();\n    }\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext, allowSlidePrev = swiper.allowSlidePrev, snapGrid = swiper.snapGrid;\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    if (params.freeMode) {\n        var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (params.autoHeight) {\n            swiper.updateAutoHeight();\n        }\n    }\n    else {\n        swiper.updateSlidesClasses();\n        if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n            swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        }\n        else {\n            swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n    }\n}\nfunction onClick(e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n        if (swiper.params.preventClicks)\n            e.preventDefault();\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n}\nfunction attachEvents() {\n    var swiper = this;\n    var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl;\n    {\n        swiper.onTouchStart = onTouchStart.bind(swiper);\n        swiper.onTouchMove = onTouchMove.bind(swiper);\n        swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n    swiper.onClick = onClick.bind(swiper);\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n    // Touch Events\n    {\n        if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n            target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n            doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n            doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n        }\n        else {\n            if (Support.touch) {\n                var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n                target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n                target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n                target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n            }\n            if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n                target.addEventListener('mousedown', swiper.onTouchStart, false);\n                doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n                doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n            }\n        }\n        // Prevent Links Clicks\n        if (params.preventClicks || params.preventClicksPropagation) {\n            target.addEventListener('click', swiper.onClick, true);\n        }\n    }\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\nfunction detachEvents() {\n    var swiper = this;\n    var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl;\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n    // Touch Events\n    {\n        if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n            target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n            doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n            doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n        }\n        else {\n            if (Support.touch) {\n                var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n                target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n                target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n                target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n            }\n            if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n                target.removeEventListener('mousedown', swiper.onTouchStart, false);\n                doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n                doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n            }\n        }\n        // Prevent Links Clicks\n        if (params.preventClicks || params.preventClicksPropagation) {\n            target.removeEventListener('click', swiper.onClick, true);\n        }\n    }\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\nvar events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n};\nfunction setBreakpoint() {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex, initialized = swiper.initialized, _a = swiper.loopedSlides, loopedSlides = _a === void 0 ? 0 : _a, params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0))\n        return;\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n        var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n        var needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n        Utils.extend(swiper.params, breakPointsParams);\n        Utils.extend(swiper, {\n            allowTouchMove: swiper.params.allowTouchMove,\n            allowSlideNext: swiper.params.allowSlideNext,\n            allowSlidePrev: swiper.params.allowSlidePrev,\n        });\n        swiper.currentBreakpoint = breakpoint;\n        if (needsReLoop && initialized) {\n            swiper.loopDestroy();\n            swiper.loopCreate();\n            swiper.updateSlides();\n            swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n        }\n        swiper.emit('breakpoint', breakPointsParams);\n    }\n}\nfunction getBreakpoint(breakpoints) {\n    var swiper = this;\n    // Get breakpoint for window width\n    if (!breakpoints)\n        return undefined;\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n        points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n        var point = points[i];\n        if (swiper.params.breakpointsInverse) {\n            if (point <= win.innerWidth) {\n                breakpoint = point;\n            }\n        }\n        else if (point >= win.innerWidth && !breakpoint) {\n            breakpoint = point;\n        }\n    }\n    return breakpoint || 'max';\n}\nvar breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\nvar Browser = (function Browser() {\n    function isSafari() {\n        var ua = win.navigator.userAgent.toLowerCase();\n        return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n        isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n        isEdge: !!win.navigator.userAgent.match(/Edge/g),\n        isSafari: isSafari(),\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n}());\nfunction addClasses() {\n    var swiper = this;\n    var classNames = swiper.classNames, params = swiper.params, rtl = swiper.rtl, $el = swiper.$el;\n    var suffixes = [];\n    suffixes.push(params.direction);\n    if (params.freeMode) {\n        suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n        suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n        suffixes.push('autoheight');\n    }\n    if (rtl) {\n        suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n        suffixes.push('multirow');\n    }\n    if (Device.android) {\n        suffixes.push('android');\n    }\n    if (Device.ios) {\n        suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        suffixes.push(\"wp8-\" + params.direction);\n    }\n    suffixes.forEach(function (suffix) {\n        classNames.push(params.containerModifierClass + suffix);\n    });\n    $el.addClass(classNames.join(' '));\n}\nfunction removeClasses() {\n    var swiper = this;\n    var $el = swiper.$el, classNames = swiper.classNames;\n    $el.removeClass(classNames.join(' '));\n}\nvar classes = { addClasses: addClasses, removeClasses: removeClasses };\nfunction loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n        if (callback)\n            callback();\n    }\n    if (!imageEl.complete || !checkForComplete) {\n        if (src) {\n            image = new win.Image();\n            image.onload = onReady;\n            image.onerror = onReady;\n            if (sizes) {\n                image.sizes = sizes;\n            }\n            if (srcset) {\n                image.srcset = srcset;\n            }\n            if (src) {\n                image.src = src;\n            }\n        }\n        else {\n            onReady();\n        }\n    }\n    else {\n        // image already loaded...\n        onReady();\n    }\n}\nfunction preloadImages() {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed)\n            return;\n        if (swiper.imagesLoaded !== undefined)\n            swiper.imagesLoaded += 1;\n        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n            if (swiper.params.updateOnImagesReady)\n                swiper.update();\n            swiper.emit('imagesReady');\n        }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n        var imageEl = swiper.imagesToLoad[i];\n        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n    }\n}\nvar images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n};\nfunction checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n    // events\n    if (wasLocked !== swiper.isLocked)\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n        swiper.isEnd = false;\n        swiper.navigation.update();\n    }\n}\nvar checkOverflow$1 = { checkOverflow: checkOverflow };\nvar defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsInverse: false,\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0,\n    slidesOffsetAfter: 0,\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchStartPreventDefault: true,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    // NS\n    containerModifierClass: 'swiper-container-',\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n    // Callbacks\n    runCallbacksOnInit: true,\n};\nvar prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n};\nvar extendedDefaults = {};\nvar Swiper = /** @class */ (function (_super) {\n    tslib_1.__extends(Swiper, _super);\n    function Swiper() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _this = this;\n        var el;\n        var params;\n        if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n            params = args[0];\n        }\n        else {\n            el = args[0], params = args[1];\n        }\n        if (!params)\n            params = {};\n        params = Utils.extend({}, params);\n        if (el && !params.el)\n            params.el = el;\n        _this = _super.call(this, params) || this;\n        Object.keys(prototypes).forEach(function (prototypeGroup) {\n            Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n                if (!Swiper.prototype[protoMethod]) {\n                    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n                }\n            });\n        });\n        // Swiper Instance\n        var swiper = _this;\n        if (typeof swiper.modules === 'undefined') {\n            swiper.modules = {};\n        }\n        Object.keys(swiper.modules).forEach(function (moduleName) {\n            var module = swiper.modules[moduleName];\n            if (module.params) {\n                var moduleParamName = Object.keys(module.params)[0];\n                var moduleParams = module.params[moduleParamName];\n                if (typeof moduleParams !== 'object' || moduleParams === null)\n                    return;\n                if (!(moduleParamName in params && 'enabled' in moduleParams))\n                    return;\n                if (params[moduleParamName] === true) {\n                    params[moduleParamName] = { enabled: true };\n                }\n                if (typeof params[moduleParamName] === 'object'\n                    && !('enabled' in params[moduleParamName])) {\n                    params[moduleParamName].enabled = true;\n                }\n                if (!params[moduleParamName])\n                    params[moduleParamName] = { enabled: false };\n            }\n        });\n        // Extend defaults with modules params\n        var swiperParams = Utils.extend({}, defaults);\n        swiper.useModulesParams(swiperParams);\n        // Extend defaults with passed params\n        swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n        swiper.originalParams = Utils.extend({}, swiper.params);\n        swiper.passedParams = Utils.extend({}, params);\n        // Save Dom lib\n        swiper.$ = $;\n        // Find el\n        var $el = $(swiper.params.el);\n        el = $el[0];\n        if (!el) {\n            return undefined;\n        }\n        if ($el.length > 1) {\n            var swipers_1 = [];\n            $el.each(function (index$$1, containerEl) {\n                var newParams = Utils.extend({}, params, { el: containerEl });\n                swipers_1.push(new Swiper(newParams));\n            });\n            return swipers_1;\n        }\n        el.swiper = swiper;\n        $el.data('swiper', swiper);\n        // Find Wrapper\n        var $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\n        // Extend Swiper\n        Utils.extend(swiper, {\n            $el: $el,\n            el: el,\n            $wrapperEl: $wrapperEl,\n            wrapperEl: $wrapperEl[0],\n            // Classes\n            classNames: [],\n            // Slides\n            slides: $(),\n            slidesGrid: [],\n            snapGrid: [],\n            slidesSizesGrid: [],\n            // isDirection\n            isHorizontal: function () {\n                return swiper.params.direction === 'horizontal';\n            },\n            isVertical: function () {\n                return swiper.params.direction === 'vertical';\n            },\n            // RTL\n            rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n            rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n            wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n            // Indexes\n            activeIndex: 0,\n            realIndex: 0,\n            //\n            isBeginning: true,\n            isEnd: false,\n            // Props\n            translate: 0,\n            previousTranslate: 0,\n            progress: 0,\n            velocity: 0,\n            animating: false,\n            // Locks\n            allowSlideNext: swiper.params.allowSlideNext,\n            allowSlidePrev: swiper.params.allowSlidePrev,\n            // Touch Events\n            touchEvents: (function touchEvents() {\n                var touch = ['touchstart', 'touchmove', 'touchend'];\n                var desktop = ['mousedown', 'mousemove', 'mouseup'];\n                if (Support.pointerEvents) {\n                    desktop = ['pointerdown', 'pointermove', 'pointerup'];\n                }\n                else if (Support.prefixedPointerEvents) {\n                    desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n                }\n                swiper.touchEventsTouch = {\n                    start: touch[0],\n                    move: touch[1],\n                    end: touch[2],\n                };\n                swiper.touchEventsDesktop = {\n                    start: desktop[0],\n                    move: desktop[1],\n                    end: desktop[2],\n                };\n                return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n            }()),\n            touchEventsData: {\n                isTouched: undefined,\n                isMoved: undefined,\n                allowTouchCallbacks: undefined,\n                touchStartTime: undefined,\n                isScrolling: undefined,\n                currentTranslate: undefined,\n                startTranslate: undefined,\n                allowThresholdMove: undefined,\n                // Form elements to match\n                formElements: 'input, select, option, textarea, button, video',\n                // Last click time\n                lastClickTime: Utils.now(),\n                clickTimeout: undefined,\n                // Velocities\n                velocities: [],\n                allowMomentumBounce: undefined,\n                isTouchEvent: undefined,\n                startMoving: undefined,\n            },\n            // Clicks\n            allowClick: true,\n            // Touches\n            allowTouchMove: swiper.params.allowTouchMove,\n            touches: {\n                startX: 0,\n                startY: 0,\n                currentX: 0,\n                currentY: 0,\n                diff: 0,\n            },\n            // Images\n            imagesToLoad: [],\n            imagesLoaded: 0,\n        });\n        // Install Modules\n        swiper.useModules();\n        // Init\n        if (swiper.params.init) {\n            swiper.init();\n        }\n        // Return app instance\n        return swiper;\n    }\n    Swiper.prototype.slidesPerViewDynamic = function () {\n        var swiper = this;\n        var params = swiper.params, slides = swiper.slides, slidesGrid = swiper.slidesGrid, swiperSize = swiper.size, activeIndex = swiper.activeIndex;\n        var spv = 1;\n        if (params.centeredSlides) {\n            var slideSize = slides[activeIndex].swiperSlideSize;\n            var breakLoop = void 0;\n            for (var i = activeIndex + 1; i < slides.length; i += 1) {\n                if (slides[i] && !breakLoop) {\n                    slideSize += slides[i].swiperSlideSize;\n                    spv += 1;\n                    if (slideSize > swiperSize)\n                        breakLoop = true;\n                }\n            }\n            for (var i = activeIndex - 1; i >= 0; i -= 1) {\n                if (slides[i] && !breakLoop) {\n                    slideSize += slides[i].swiperSlideSize;\n                    spv += 1;\n                    if (slideSize > swiperSize)\n                        breakLoop = true;\n                }\n            }\n        }\n        else {\n            for (var i = activeIndex + 1; i < slides.length; i += 1) {\n                if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n                    spv += 1;\n                }\n            }\n        }\n        return spv;\n    };\n    Swiper.prototype.update = function () {\n        var swiper = this;\n        if (!swiper || swiper.destroyed)\n            return;\n        var snapGrid = swiper.snapGrid, params = swiper.params;\n        // Breakpoints\n        if (params.breakpoints) {\n            swiper.setBreakpoint();\n        }\n        swiper.updateSize();\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        function setTranslate() {\n            var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n            var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n            swiper.setTranslate(newTranslate);\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n        var translated;\n        if (swiper.params.freeMode) {\n            setTranslate();\n            if (swiper.params.autoHeight) {\n                swiper.updateAutoHeight();\n            }\n        }\n        else {\n            if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n                translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n            }\n            else {\n                translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n            }\n            if (!translated) {\n                setTranslate();\n            }\n        }\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n            swiper.checkOverflow();\n        }\n        swiper.emit('update');\n    };\n    Swiper.prototype.init = function () {\n        var swiper = this;\n        if (swiper.initialized)\n            return;\n        swiper.emit('beforeInit');\n        // Set breakpoint\n        if (swiper.params.breakpoints) {\n            swiper.setBreakpoint();\n        }\n        // Add Classes\n        swiper.addClasses();\n        // Create loop\n        if (swiper.params.loop) {\n            swiper.loopCreate();\n        }\n        // Update size\n        swiper.updateSize();\n        // Update slides\n        swiper.updateSlides();\n        if (swiper.params.watchOverflow) {\n            swiper.checkOverflow();\n        }\n        // Set Grab Cursor\n        if (swiper.params.grabCursor) {\n            swiper.setGrabCursor();\n        }\n        if (swiper.params.preloadImages) {\n            swiper.preloadImages();\n        }\n        // Slide To Initial Slide\n        if (swiper.params.loop) {\n            swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n        }\n        else {\n            swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n        }\n        // Attach events\n        swiper.attachEvents();\n        // Init Flag\n        swiper.initialized = true;\n        // Emit\n        swiper.emit('init');\n    };\n    Swiper.prototype.destroy = function (deleteInstance, cleanStyles) {\n        if (deleteInstance === void 0) { deleteInstance = true; }\n        if (cleanStyles === void 0) { cleanStyles = true; }\n        var swiper = this;\n        var params = swiper.params, $el = swiper.$el, $wrapperEl = swiper.$wrapperEl, slides = swiper.slides;\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n            return null;\n        }\n        swiper.emit('beforeDestroy');\n        // Init Flag\n        swiper.initialized = false;\n        // Detach events\n        swiper.detachEvents();\n        // Destroy loop\n        if (params.loop) {\n            swiper.loopDestroy();\n        }\n        // Cleanup styles\n        if (cleanStyles) {\n            swiper.removeClasses();\n            $el.removeAttr('style');\n            $wrapperEl.removeAttr('style');\n            if (slides && slides.length) {\n                slides\n                    .removeClass([\n                    params.slideVisibleClass,\n                    params.slideActiveClass,\n                    params.slideNextClass,\n                    params.slidePrevClass,\n                ].join(' '))\n                    .removeAttr('style')\n                    .removeAttr('data-swiper-slide-index')\n                    .removeAttr('data-swiper-column')\n                    .removeAttr('data-swiper-row');\n            }\n        }\n        swiper.emit('destroy');\n        // Detach emitter events\n        Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n            swiper.off(eventName);\n        });\n        if (deleteInstance !== false) {\n            swiper.$el[0].swiper = null;\n            swiper.$el.data('swiper', null);\n            Utils.deleteProps(swiper);\n        }\n        swiper.destroyed = true;\n        return null;\n    };\n    Swiper.extendDefaults = function (newDefaults) {\n        Utils.extend(extendedDefaults, newDefaults);\n    };\n    Object.defineProperty(Swiper, \"extendedDefaults\", {\n        get: function () {\n            return extendedDefaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Swiper, \"defaults\", {\n        get: function () {\n            return defaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Swiper, \"Class\", {\n        get: function () {\n            return SwiperClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Swiper, \"$\", {\n        get: function () {\n            return $;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Swiper;\n}(SwiperClass));\nvar Device$1 = {\n    name: 'device',\n    proto: {\n        device: Device,\n    },\n    static: {\n        device: Device,\n    },\n};\nvar Support$1 = {\n    name: 'support',\n    proto: {\n        support: Support,\n    },\n    static: {\n        support: Support,\n    },\n};\nvar Browser$1 = {\n    name: 'browser',\n    proto: {\n        browser: Browser,\n    },\n    static: {\n        browser: Browser,\n    },\n};\nvar Resize = {\n    name: 'resize',\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            resize: {\n                resizeHandler: function () {\n                    if (!swiper || swiper.destroyed || !swiper.initialized)\n                        return;\n                    swiper.emit('beforeResize');\n                    swiper.emit('resize');\n                },\n                orientationChangeHandler: function () {\n                    if (!swiper || swiper.destroyed || !swiper.initialized)\n                        return;\n                    swiper.emit('orientationchange');\n                },\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            // Emit resize\n            win.addEventListener('resize', swiper.resize.resizeHandler);\n            // Emit orientationchange\n            win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n        },\n        destroy: function () {\n            var swiper = this;\n            win.removeEventListener('resize', swiper.resize.resizeHandler);\n            win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n        },\n    },\n};\nvar Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function (target, options) {\n        if (options === void 0) { options = {}; }\n        var swiper = this;\n        var ObserverFunc = Observer.func;\n        var observer = new ObserverFunc(function (mutations) {\n            // The observerUpdate event should only be triggered\n            // once despite the number of mutations.  Additional\n            // triggers are redundant and are very costly\n            if (mutations.length === 1) {\n                swiper.emit('observerUpdate', mutations[0]);\n                return;\n            }\n            var observerUpdate = function observerUpdate() {\n                swiper.emit('observerUpdate', mutations[0]);\n            };\n            if (win.requestAnimationFrame) {\n                win.requestAnimationFrame(observerUpdate);\n            }\n            else {\n                win.setTimeout(observerUpdate, 0);\n            }\n        });\n        observer.observe(target, {\n            attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n            childList: typeof options.childList === 'undefined' ? true : options.childList,\n            characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n        });\n        swiper.observer.observers.push(observer);\n    },\n    init: function () {\n        var swiper = this;\n        if (!Support.observer || !swiper.params.observer)\n            return;\n        if (swiper.params.observeParents) {\n            var containerParents = swiper.$el.parents();\n            for (var i = 0; i < containerParents.length; i += 1) {\n                swiper.observer.attach(containerParents[i]);\n            }\n        }\n        // Observe container\n        swiper.observer.attach(swiper.$el[0], { childList: false });\n        // Observe wrapper\n        swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function () {\n        var swiper = this;\n        swiper.observer.observers.forEach(function (observer) {\n            observer.disconnect();\n        });\n        swiper.observer.observers = [];\n    },\n};\nvar Observer$1 = {\n    name: 'observer',\n    params: {\n        observer: false,\n        observeParents: false,\n    },\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            observer: {\n                init: Observer.init.bind(swiper),\n                attach: Observer.attach.bind(swiper),\n                destroy: Observer.destroy.bind(swiper),\n                observers: [],\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            swiper.observer.init();\n        },\n        destroy: function () {\n            var swiper = this;\n            swiper.observer.destroy();\n        },\n    },\n};\nfunction isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n    if (!isSupported) {\n        var element = doc.createElement('div');\n        element.setAttribute(eventName, 'return;');\n        isSupported = typeof element[eventName] === 'function';\n    }\n    if (!isSupported\n        && doc.implementation\n        && doc.implementation.hasFeature\n        // always returns true in newer browsers as per the standard.\n        // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n        && doc.implementation.hasFeature('', '') !== true) {\n        // This is the only way to test support for the `wheel` event in IE9+.\n        isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n    return isSupported;\n}\nvar Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n        if (win.navigator.userAgent.indexOf('firefox') > -1)\n            return 'DOMMouseScroll';\n        return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function (e) {\n        // Reasonable defaults\n        var PIXEL_STEP = 10;\n        var LINE_HEIGHT = 40;\n        var PAGE_HEIGHT = 800;\n        var sX = 0;\n        var sY = 0; // spinX, spinY\n        var pX = 0;\n        var pY = 0; // pixelX, pixelY\n        // Legacy\n        if ('detail' in e) {\n            sY = e.detail;\n        }\n        if ('wheelDelta' in e) {\n            sY = -e.wheelDelta / 120;\n        }\n        if ('wheelDeltaY' in e) {\n            sY = -e.wheelDeltaY / 120;\n        }\n        if ('wheelDeltaX' in e) {\n            sX = -e.wheelDeltaX / 120;\n        }\n        // side scrolling on FF with DOMMouseScroll\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n            sX = sY;\n            sY = 0;\n        }\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n        if ('deltaY' in e) {\n            pY = e.deltaY;\n        }\n        if ('deltaX' in e) {\n            pX = e.deltaX;\n        }\n        if ((pX || pY) && e.deltaMode) {\n            if (e.deltaMode === 1) { // delta in LINE units\n                pX *= LINE_HEIGHT;\n                pY *= LINE_HEIGHT;\n            }\n            else { // delta in PAGE units\n                pX *= PAGE_HEIGHT;\n                pY *= PAGE_HEIGHT;\n            }\n        }\n        // Fall-back if spin cannot be determined\n        if (pX && !sX) {\n            sX = (pX < 1) ? -1 : 1;\n        }\n        if (pY && !sY) {\n            sY = (pY < 1) ? -1 : 1;\n        }\n        return {\n            spinX: sX,\n            spinY: sY,\n            pixelX: pX,\n            pixelY: pY,\n        };\n    },\n    handleMouseEnter: function () {\n        var swiper = this;\n        swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function () {\n        var swiper = this;\n        swiper.mouseEntered = false;\n    },\n    handle: function (event) {\n        var e = event;\n        var swiper = this;\n        var params = swiper.params.mousewheel;\n        if (!swiper.mouseEntered && !params.releaseOnEdges)\n            return true;\n        if (e.originalEvent)\n            e = e.originalEvent; // jquery fix\n        var delta = 0;\n        var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        var data$$1 = Mousewheel.normalize(e);\n        if (params.forceToAxis) {\n            if (swiper.isHorizontal()) {\n                if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY))\n                    delta = data$$1.pixelX * rtlFactor;\n                else\n                    return true;\n            }\n            else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX))\n                delta = data$$1.pixelY;\n            else\n                return true;\n        }\n        else {\n            delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n        }\n        if (delta === 0)\n            return true;\n        if (params.invert)\n            delta = -delta;\n        if (!swiper.params.freeMode) {\n            if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n                if (delta < 0) {\n                    if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n                        swiper.slideNext();\n                        swiper.emit('scroll', e);\n                    }\n                    else if (params.releaseOnEdges)\n                        return true;\n                }\n                else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n                    swiper.slidePrev();\n                    swiper.emit('scroll', e);\n                }\n                else if (params.releaseOnEdges)\n                    return true;\n            }\n            swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n        }\n        else {\n            // Freemode or scrollContainer:\n            if (swiper.params.loop) {\n                swiper.loopFix();\n            }\n            var position = swiper.getTranslate() + (delta * params.sensitivity);\n            var wasBeginning = swiper.isBeginning;\n            var wasEnd = swiper.isEnd;\n            if (position >= swiper.minTranslate())\n                position = swiper.minTranslate();\n            if (position <= swiper.maxTranslate())\n                position = swiper.maxTranslate();\n            swiper.setTransition(0);\n            swiper.setTranslate(position);\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n            if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n                swiper.updateSlidesClasses();\n            }\n            if (swiper.params.freeModeSticky) {\n                clearTimeout(swiper.mousewheel.timeout);\n                swiper.mousewheel.timeout = Utils.nextTick(function () {\n                    swiper.slideToClosest();\n                }, 300);\n            }\n            // Emit event\n            swiper.emit('scroll', e);\n            // Stop autoplay\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction)\n                swiper.autoplay.stop();\n            // Return page scroll on edge positions\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate())\n                return true;\n        }\n        if (e.preventDefault)\n            e.preventDefault();\n        else\n            e.returnValue = false;\n        return false;\n    },\n    enable: function () {\n        var swiper = this;\n        if (!Mousewheel.event)\n            return false;\n        if (swiper.mousewheel.enabled)\n            return false;\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n            target = $(swiper.params.mousewheel.eventsTarged);\n        }\n        target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n        target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n        target.on(Mousewheel.event, swiper.mousewheel.handle);\n        swiper.mousewheel.enabled = true;\n        return true;\n    },\n    disable: function () {\n        var swiper = this;\n        if (!Mousewheel.event)\n            return false;\n        if (!swiper.mousewheel.enabled)\n            return false;\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n            target = $(swiper.params.mousewheel.eventsTarged);\n        }\n        target.off(Mousewheel.event, swiper.mousewheel.handle);\n        swiper.mousewheel.enabled = false;\n        return true;\n    },\n};\nvar Pagination = {\n    update: function () {\n        // Render || Update Pagination bullets/items\n        var swiper = this;\n        var rtl = swiper.rtl;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\n            return;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el;\n        // Current/Total\n        var current;\n        var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        if (swiper.params.loop) {\n            current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n            if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n                current -= (slidesLength - (swiper.loopedSlides * 2));\n            }\n            if (current > total - 1)\n                current -= total;\n            if (current < 0 && swiper.params.paginationType !== 'bullets')\n                current = total + current;\n        }\n        else if (typeof swiper.snapIndex !== 'undefined') {\n            current = swiper.snapIndex;\n        }\n        else {\n            current = swiper.activeIndex || 0;\n        }\n        // Types\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n            var bullets = swiper.pagination.bullets;\n            var firstIndex_1;\n            var lastIndex_1;\n            var midIndex = void 0;\n            if (params.dynamicBullets) {\n                swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n                $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n                if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n                    swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n                    if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n                        swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n                    }\n                    else if (swiper.pagination.dynamicBulletIndex < 0) {\n                        swiper.pagination.dynamicBulletIndex = 0;\n                    }\n                }\n                firstIndex_1 = current - swiper.pagination.dynamicBulletIndex;\n                lastIndex_1 = firstIndex_1 + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n                midIndex = (lastIndex_1 + firstIndex_1) / 2;\n            }\n            bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n            if ($el.length > 1) {\n                bullets.each(function (index$$1, bullet) {\n                    var $bullet = $(bullet);\n                    var bulletIndex = $bullet.index();\n                    if (bulletIndex === current) {\n                        $bullet.addClass(params.bulletActiveClass);\n                    }\n                    if (params.dynamicBullets) {\n                        if (bulletIndex >= firstIndex_1 && bulletIndex <= lastIndex_1) {\n                            $bullet.addClass(params.bulletActiveClass + \"-main\");\n                        }\n                        if (bulletIndex === firstIndex_1) {\n                            $bullet\n                                .prev()\n                                .addClass(params.bulletActiveClass + \"-prev\")\n                                .prev()\n                                .addClass(params.bulletActiveClass + \"-prev-prev\");\n                        }\n                        if (bulletIndex === lastIndex_1) {\n                            $bullet\n                                .next()\n                                .addClass(params.bulletActiveClass + \"-next\")\n                                .next()\n                                .addClass(params.bulletActiveClass + \"-next-next\");\n                        }\n                    }\n                });\n            }\n            else {\n                var $bullet = bullets.eq(current);\n                $bullet.addClass(params.bulletActiveClass);\n                if (params.dynamicBullets) {\n                    var $firstDisplayedBullet = bullets.eq(firstIndex_1);\n                    var $lastDisplayedBullet = bullets.eq(lastIndex_1);\n                    for (var i = firstIndex_1; i <= lastIndex_1; i += 1) {\n                        bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n                    }\n                    $firstDisplayedBullet\n                        .prev()\n                        .addClass(params.bulletActiveClass + \"-prev\")\n                        .prev()\n                        .addClass(params.bulletActiveClass + \"-prev-prev\");\n                    $lastDisplayedBullet\n                        .next()\n                        .addClass(params.bulletActiveClass + \"-next\")\n                        .next()\n                        .addClass(params.bulletActiveClass + \"-next-next\");\n                }\n            }\n            if (params.dynamicBullets) {\n                var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n                var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n                var offsetProp = rtl ? 'right' : 'left';\n                bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\n            }\n        }\n        if (params.type === 'fraction') {\n            $el.find(\".\" + params.currentClass).text(params.formatFractionCurrent(current + 1));\n            $el.find(\".\" + params.totalClass).text(params.formatFractionTotal(total));\n        }\n        if (params.type === 'progressbar') {\n            var progressbarDirection = void 0;\n            if (params.progressbarOpposite) {\n                progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n            }\n            else {\n                progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n            }\n            var scale = (current + 1) / total;\n            var scaleX = 1;\n            var scaleY = 1;\n            if (progressbarDirection === 'horizontal') {\n                scaleX = scale;\n            }\n            else {\n                scaleY = scale;\n            }\n            $el.find(\".\" + params.progressbarFillClass).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n        }\n        if (params.type === 'custom' && params.renderCustom) {\n            $el.html(params.renderCustom(swiper, current + 1, total));\n            swiper.emit('paginationRender', swiper, $el[0]);\n        }\n        else {\n            swiper.emit('paginationUpdate', swiper, $el[0]);\n        }\n        $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function () {\n        // Render Container\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\n            return;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el;\n        var paginationHTML = '';\n        if (params.type === 'bullets') {\n            var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n            for (var i = 0; i < numberOfBullets; i += 1) {\n                if (params.renderBullet) {\n                    paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n                }\n                else {\n                    paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\n                }\n            }\n            $el.html(paginationHTML);\n            swiper.pagination.bullets = $el.find(\".\" + params.bulletClass);\n        }\n        if (params.type === 'fraction') {\n            if (params.renderFraction) {\n                paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n            }\n            else {\n                paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\"\n                    + ' / '\n                    + (\"<span class=\\\"\" + params.totalClass + \"\\\"></span>\");\n            }\n            $el.html(paginationHTML);\n        }\n        if (params.type === 'progressbar') {\n            if (params.renderProgressbar) {\n                paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n            }\n            else {\n                paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\n            }\n            $el.html(paginationHTML);\n        }\n        if (params.type !== 'custom') {\n            swiper.emit('paginationRender', swiper.pagination.$el[0]);\n        }\n    },\n    init: function () {\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el)\n            return;\n        var $el = $(params.el);\n        if ($el.length === 0)\n            return;\n        if (swiper.params.uniqueNavElements\n            && typeof params.el === 'string'\n            && $el.length > 1\n            && swiper.$el.find(params.el).length === 1) {\n            $el = swiper.$el.find(params.el);\n        }\n        if (params.type === 'bullets' && params.clickable) {\n            $el.addClass(params.clickableClass);\n        }\n        $el.addClass(params.modifierClass + params.type);\n        if (params.type === 'bullets' && params.dynamicBullets) {\n            $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n            swiper.pagination.dynamicBulletIndex = 0;\n            if (params.dynamicMainBullets < 1) {\n                params.dynamicMainBullets = 1;\n            }\n        }\n        if (params.type === 'progressbar' && params.progressbarOpposite) {\n            $el.addClass(params.progressbarOppositeClass);\n        }\n        if (params.clickable) {\n            $el.on('click', \".\" + params.bulletClass, function onClick(e) {\n                e.preventDefault();\n                var index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n                if (swiper.params.loop)\n                    index$$1 += swiper.loopedSlides;\n                swiper.slideTo(index$$1);\n            });\n        }\n        Utils.extend(swiper.pagination, {\n            $el: $el,\n            el: $el[0],\n        });\n    },\n    destroy: function () {\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0)\n            return;\n        var $el = swiper.pagination.$el;\n        $el.removeClass(params.hiddenClass);\n        $el.removeClass(params.modifierClass + params.type);\n        if (swiper.pagination.bullets)\n            swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n        if (params.clickable) {\n            $el.off('click', \".\" + params.bulletClass);\n        }\n    },\n};\nvar pagination = {\n    name: 'pagination',\n    params: {\n        pagination: {\n            el: null,\n            bulletElement: 'span',\n            clickable: false,\n            hideOnClick: false,\n            renderBullet: null,\n            renderProgressbar: null,\n            renderFraction: null,\n            renderCustom: null,\n            progressbarOpposite: false,\n            type: 'bullets',\n            dynamicBullets: false,\n            dynamicMainBullets: 1,\n            formatFractionCurrent: function (number) { return number; },\n            formatFractionTotal: function (number) { return number; },\n            bulletClass: 'swiper-pagination-bullet',\n            bulletActiveClass: 'swiper-pagination-bullet-active',\n            modifierClass: 'swiper-pagination-',\n            currentClass: 'swiper-pagination-current',\n            totalClass: 'swiper-pagination-total',\n            hiddenClass: 'swiper-pagination-hidden',\n            progressbarFillClass: 'swiper-pagination-progressbar-fill',\n            progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n            clickableClass: 'swiper-pagination-clickable',\n            lockClass: 'swiper-pagination-lock',\n        },\n    },\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            pagination: {\n                init: Pagination.init.bind(swiper),\n                render: Pagination.render.bind(swiper),\n                update: Pagination.update.bind(swiper),\n                destroy: Pagination.destroy.bind(swiper),\n                dynamicBulletIndex: 0,\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            swiper.pagination.init();\n            swiper.pagination.render();\n            swiper.pagination.update();\n        },\n        activeIndexChange: function () {\n            var swiper = this;\n            if (swiper.params.loop) {\n                swiper.pagination.update();\n            }\n            else if (typeof swiper.snapIndex === 'undefined') {\n                swiper.pagination.update();\n            }\n        },\n        snapIndexChange: function () {\n            var swiper = this;\n            if (!swiper.params.loop) {\n                swiper.pagination.update();\n            }\n        },\n        slidesLengthChange: function () {\n            var swiper = this;\n            if (swiper.params.loop) {\n                swiper.pagination.render();\n                swiper.pagination.update();\n            }\n        },\n        snapGridLengthChange: function () {\n            var swiper = this;\n            if (!swiper.params.loop) {\n                swiper.pagination.render();\n                swiper.pagination.update();\n            }\n        },\n        destroy: function () {\n            var swiper = this;\n            swiper.pagination.destroy();\n        },\n        click: function (e) {\n            var swiper = this;\n            if (swiper.params.pagination.el\n                && swiper.params.pagination.hideOnClick\n                && swiper.pagination.$el.length > 0\n                && !$(e.target).hasClass(swiper.params.pagination.bulletClass)) {\n                swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n            }\n        },\n    },\n};\nvar Scrollbar = {\n    setTranslate: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate, progress = swiper.progress;\n        var dragSize = scrollbar.dragSize, trackSize = scrollbar.trackSize, $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\n        var params = swiper.params.scrollbar;\n        var newSize = dragSize;\n        var newPos = (trackSize - dragSize) * progress;\n        if (rtl) {\n            newPos = -newPos;\n            if (newPos > 0) {\n                newSize = dragSize - newPos;\n                newPos = 0;\n            }\n            else if (-newPos + dragSize > trackSize) {\n                newSize = trackSize + newPos;\n            }\n        }\n        else if (newPos < 0) {\n            newSize = dragSize + newPos;\n            newPos = 0;\n        }\n        else if (newPos + dragSize > trackSize) {\n            newSize = trackSize - newPos;\n        }\n        if (swiper.isHorizontal()) {\n            if (Support.transforms3d) {\n                $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n            }\n            else {\n                $dragEl.transform(\"translateX(\" + newPos + \"px)\");\n            }\n            $dragEl[0].style.width = newSize + \"px\";\n        }\n        else {\n            if (Support.transforms3d) {\n                $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n            }\n            else {\n                $dragEl.transform(\"translateY(\" + newPos + \"px)\");\n            }\n            $dragEl[0].style.height = newSize + \"px\";\n        }\n        if (params.hide) {\n            clearTimeout(swiper.scrollbar.timeout);\n            $el[0].style.opacity = 1;\n            swiper.scrollbar.timeout = setTimeout(function () {\n                $el[0].style.opacity = 0;\n                $el.transition(400);\n            }, 1000);\n        }\n    },\n    setTransition: function (duration) {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\n            return;\n        swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar;\n        var $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\n        $dragEl[0].style.width = '';\n        $dragEl[0].style.height = '';\n        var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n        var divider = swiper.size / swiper.virtualSize;\n        var moveDivider = divider * (trackSize / swiper.size);\n        var dragSize;\n        if (swiper.params.scrollbar.dragSize === 'auto') {\n            dragSize = trackSize * divider;\n        }\n        else {\n            dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        }\n        if (swiper.isHorizontal()) {\n            $dragEl[0].style.width = dragSize + \"px\";\n        }\n        else {\n            $dragEl[0].style.height = dragSize + \"px\";\n        }\n        if (divider >= 1) {\n            $el[0].style.display = 'none';\n        }\n        else {\n            $el[0].style.display = '';\n        }\n        if (swiper.params.scrollbarHide) {\n            $el[0].style.opacity = 0;\n        }\n        Utils.extend(scrollbar, {\n            trackSize: trackSize,\n            divider: divider,\n            moveDivider: moveDivider,\n            dragSize: dragSize,\n        });\n        scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function (e) {\n        var swiper = this;\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate;\n        var $el = scrollbar.$el, dragSize = scrollbar.dragSize, trackSize = scrollbar.trackSize;\n        var pointerPosition;\n        if (swiper.isHorizontal()) {\n            pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n        }\n        else {\n            pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n        }\n        var positionRatio;\n        positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n        if (rtl) {\n            positionRatio = 1 - positionRatio;\n        }\n        var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n    },\n    onDragStart: function (e) {\n        var swiper = this;\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\n        swiper.scrollbar.isTouched = true;\n        e.preventDefault();\n        e.stopPropagation();\n        $wrapperEl.transition(100);\n        $dragEl.transition(100);\n        scrollbar.setDragPosition(e);\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        $el.transition(0);\n        if (params.hide) {\n            $el.css('opacity', 1);\n        }\n        swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function (e) {\n        var swiper = this;\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\n        if (!swiper.scrollbar.isTouched)\n            return;\n        if (e.preventDefault)\n            e.preventDefault();\n        else\n            e.returnValue = false;\n        scrollbar.setDragPosition(e);\n        $wrapperEl.transition(0);\n        $el.transition(0);\n        $dragEl.transition(0);\n        swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function (e) {\n        var swiper = this;\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar;\n        var $el = scrollbar.$el;\n        if (!swiper.scrollbar.isTouched)\n            return;\n        swiper.scrollbar.isTouched = false;\n        if (params.hide) {\n            clearTimeout(swiper.scrollbar.dragTimeout);\n            swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n                $el.css('opacity', 0);\n                $el.transition(400);\n            }, 1000);\n        }\n        swiper.emit('scrollbarDragEnd', e);\n        if (params.snapOnRelease) {\n            swiper.slideToClosest();\n        }\n    },\n    enableDraggable: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar, touchEvents = swiper.touchEvents, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params;\n        var $el = scrollbar.$el;\n        var target = $el[0];\n        var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n        var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n            target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n            doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n            doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        else {\n            if (Support.touch) {\n                target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n                target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n                target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n            }\n            if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n                target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n                doc.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n                doc.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n            }\n        }\n    },\n    disableDraggable: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar, touchEvents = swiper.touchEvents, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params;\n        var $el = scrollbar.$el;\n        var target = $el[0];\n        var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n        var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n            target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n            doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n            doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n        else {\n            if (Support.touch) {\n                target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n                target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n                target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n            }\n            if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n                target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n                doc.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n                doc.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n            }\n        }\n    },\n    init: function () {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el)\n            return;\n        var scrollbar = swiper.scrollbar, $swiperEl = swiper.$el;\n        var params = swiper.params.scrollbar;\n        var $el = $(params.el);\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n            $el = $swiperEl.find(params.el);\n        }\n        var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n        if ($dragEl.length === 0) {\n            $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\n            $el.append($dragEl);\n        }\n        Utils.extend(scrollbar, {\n            $el: $el,\n            el: $el[0],\n            $dragEl: $dragEl,\n            dragEl: $dragEl[0],\n        });\n        if (params.draggable) {\n            scrollbar.enableDraggable();\n        }\n    },\n    destroy: function () {\n        var swiper = this;\n        swiper.scrollbar.disableDraggable();\n    },\n};\nvar scrollbar = {\n    name: 'scrollbar',\n    params: {\n        scrollbar: {\n            el: null,\n            dragSize: 'auto',\n            hide: false,\n            draggable: false,\n            snapOnRelease: true,\n            lockClass: 'swiper-scrollbar-lock',\n            dragClass: 'swiper-scrollbar-drag',\n        },\n    },\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            scrollbar: {\n                init: Scrollbar.init.bind(swiper),\n                destroy: Scrollbar.destroy.bind(swiper),\n                updateSize: Scrollbar.updateSize.bind(swiper),\n                setTranslate: Scrollbar.setTranslate.bind(swiper),\n                setTransition: Scrollbar.setTransition.bind(swiper),\n                enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n                disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n                setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n                onDragStart: Scrollbar.onDragStart.bind(swiper),\n                onDragMove: Scrollbar.onDragMove.bind(swiper),\n                onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n                isTouched: false,\n                timeout: null,\n                dragTimeout: null,\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            swiper.scrollbar.init();\n            swiper.scrollbar.updateSize();\n            swiper.scrollbar.setTranslate();\n        },\n        update: function () {\n            var swiper = this;\n            swiper.scrollbar.updateSize();\n        },\n        resize: function () {\n            var swiper = this;\n            swiper.scrollbar.updateSize();\n        },\n        observerUpdate: function () {\n            var swiper = this;\n            swiper.scrollbar.updateSize();\n        },\n        setTranslate: function () {\n            var swiper = this;\n            swiper.scrollbar.setTranslate();\n        },\n        setTransition: function (duration) {\n            var swiper = this;\n            swiper.scrollbar.setTransition(duration);\n        },\n        destroy: function () {\n            var swiper = this;\n            swiper.scrollbar.destroy();\n        },\n    },\n};\nvar Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function (e) {\n        if (e.targetTouches.length < 2)\n            return 1;\n        var x1 = e.targetTouches[0].pageX;\n        var y1 = e.targetTouches[0].pageY;\n        var x2 = e.targetTouches[1].pageX;\n        var y2 = e.targetTouches[1].pageY;\n        var distance = Math.sqrt((Math.pow((x2 - x1), 2)) + (Math.pow((y2 - y1), 2)));\n        return distance;\n    },\n    // Events\n    onGestureStart: function (e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n        if (!Support.gestures) {\n            if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n                return;\n            }\n            zoom.fakeGestureTouched = true;\n            gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n        }\n        if (!gesture.$slideEl || !gesture.$slideEl.length) {\n            gesture.$slideEl = $(e.target).closest('.swiper-slide');\n            if (gesture.$slideEl.length === 0)\n                gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n            gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n            if (gesture.$imageWrapEl.length === 0) {\n                gesture.$imageEl = undefined;\n                return;\n            }\n        }\n        gesture.$imageEl.transition(0);\n        swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function (e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (!Support.gestures) {\n            if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n                return;\n            }\n            zoom.fakeGestureMoved = true;\n            gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        if (Support.gestures) {\n            swiper.zoom.scale = e.scale * zoom.currentScale;\n        }\n        else {\n            zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n        }\n        if (zoom.scale > gesture.maxRatio) {\n            zoom.scale = (gesture.maxRatio - 1) + (Math.pow(((zoom.scale - gesture.maxRatio) + 1), 0.5));\n        }\n        if (zoom.scale < params.minRatio) {\n            zoom.scale = (params.minRatio + 1) - (Math.pow(((params.minRatio - zoom.scale) + 1), 0.5));\n        }\n        gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    onGestureEnd: function (e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (!Support.gestures) {\n            if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n                return;\n            }\n            if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n                return;\n            }\n            zoom.fakeGestureTouched = false;\n            zoom.fakeGestureMoved = false;\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n        zoom.currentScale = zoom.scale;\n        zoom.isScaling = false;\n        if (zoom.scale === 1)\n            gesture.$slideEl = undefined;\n    },\n    onTouchStart: function (e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture, image = zoom.image;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        if (image.isTouched)\n            return;\n        if (Device.android)\n            e.preventDefault();\n        image.isTouched = true;\n        image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function (e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture, image = zoom.image, velocity = zoom.velocity;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        swiper.allowClick = false;\n        if (!image.isTouched || !gesture.$slideEl)\n            return;\n        if (!image.isMoved) {\n            image.width = gesture.$imageEl[0].offsetWidth;\n            image.height = gesture.$imageEl[0].offsetHeight;\n            image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n            image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n            gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n            gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n            gesture.$imageWrapEl.transition(0);\n            if (swiper.rtl) {\n                image.startX = -image.startX;\n                image.startY = -image.startY;\n            }\n        }\n        // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight)\n            return;\n        image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        if (!image.isMoved && !zoom.isScaling) {\n            if (swiper.isHorizontal()\n                && ((Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n                    || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x))) {\n                image.isTouched = false;\n                return;\n            }\n            if (!swiper.isHorizontal()\n                && ((Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n                    || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y))) {\n                image.isTouched = false;\n                return;\n            }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        image.isMoved = true;\n        image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n        image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n        if (image.currentX < image.minX) {\n            image.currentX = (image.minX + 1) - (Math.pow(((image.minX - image.currentX) + 1), 0.8));\n        }\n        if (image.currentX > image.maxX) {\n            image.currentX = (image.maxX - 1) + (Math.pow(((image.currentX - image.maxX) + 1), 0.8));\n        }\n        if (image.currentY < image.minY) {\n            image.currentY = (image.minY + 1) - (Math.pow(((image.minY - image.currentY) + 1), 0.8));\n        }\n        if (image.currentY > image.maxY) {\n            image.currentY = (image.maxY - 1) + (Math.pow(((image.currentY - image.maxY) + 1), 0.8));\n        }\n        // Velocity\n        if (!velocity.prevPositionX)\n            velocity.prevPositionX = image.touchesCurrent.x;\n        if (!velocity.prevPositionY)\n            velocity.prevPositionY = image.touchesCurrent.y;\n        if (!velocity.prevTime)\n            velocity.prevTime = Date.now();\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2)\n            velocity.x = 0;\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2)\n            velocity.y = 0;\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTouchEnd: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture, image = zoom.image, velocity = zoom.velocity;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        if (!image.isTouched || !image.isMoved) {\n            image.isTouched = false;\n            image.isMoved = false;\n            return;\n        }\n        image.isTouched = false;\n        image.isMoved = false;\n        var momentumDurationX = 300;\n        var momentumDurationY = 300;\n        var momentumDistanceX = velocity.x * momentumDurationX;\n        var newPositionX = image.currentX + momentumDistanceX;\n        var momentumDistanceY = velocity.y * momentumDurationY;\n        var newPositionY = image.currentY + momentumDistanceY;\n        // Fix duration\n        if (velocity.x !== 0)\n            momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        if (velocity.y !== 0)\n            momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY;\n        // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTransitionEnd: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n            gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n            gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n            gesture.$slideEl = undefined;\n            gesture.$imageEl = undefined;\n            gesture.$imageWrapEl = undefined;\n            zoom.scale = 1;\n            zoom.currentScale = 1;\n        }\n    },\n    // Toggle Zoom\n    toggle: function (e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (zoom.scale && zoom.scale !== 1) {\n            // Zoom Out\n            zoom.out();\n        }\n        else {\n            // Zoom In\n            zoom.in(e);\n        }\n    },\n    in: function (e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        var gesture = zoom.gesture, image = zoom.image;\n        if (!gesture.$slideEl) {\n            gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n        var touchX;\n        var touchY;\n        var offsetX;\n        var offsetY;\n        var diffX;\n        var diffY;\n        var translateX;\n        var translateY;\n        var imageWidth;\n        var imageHeight;\n        var scaledWidth;\n        var scaledHeight;\n        var translateMinX;\n        var translateMinY;\n        var translateMaxX;\n        var translateMaxY;\n        var slideWidth;\n        var slideHeight;\n        if (typeof image.touchesStart.x === 'undefined' && e) {\n            touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n            touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n        }\n        else {\n            touchX = image.touchesStart.x;\n            touchY = image.touchesStart.y;\n        }\n        zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (e) {\n            slideWidth = gesture.$slideEl[0].offsetWidth;\n            slideHeight = gesture.$slideEl[0].offsetHeight;\n            offsetX = gesture.$slideEl.offset().left;\n            offsetY = gesture.$slideEl.offset().top;\n            diffX = (offsetX + (slideWidth / 2)) - touchX;\n            diffY = (offsetY + (slideHeight / 2)) - touchY;\n            imageWidth = gesture.$imageEl[0].offsetWidth;\n            imageHeight = gesture.$imageEl[0].offsetHeight;\n            scaledWidth = imageWidth * zoom.scale;\n            scaledHeight = imageHeight * zoom.scale;\n            translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n            translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n            translateMaxX = -translateMinX;\n            translateMaxY = -translateMinY;\n            translateX = diffX * zoom.scale;\n            translateY = diffY * zoom.scale;\n            if (translateX < translateMinX) {\n                translateX = translateMinX;\n            }\n            if (translateX > translateMaxX) {\n                translateX = translateMaxX;\n            }\n            if (translateY < translateMinY) {\n                translateY = translateMinY;\n            }\n            if (translateY > translateMaxY) {\n                translateY = translateMaxY;\n            }\n        }\n        else {\n            translateX = 0;\n            translateY = 0;\n        }\n        gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n        gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    out: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        var gesture = zoom.gesture;\n        if (!gesture.$slideEl) {\n            gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n            gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0)\n            return;\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n        gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n        gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n        gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n        gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (zoom.enabled)\n            return;\n        zoom.enabled = true;\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n        // Scale image\n        if (Support.gestures) {\n            swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n            swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n            swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n        else if (swiper.touchEvents.start === 'touchstart') {\n            swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n            swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n            swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n        // Move image\n        swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove);\n    },\n    disable: function () {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (!zoom.enabled)\n            return;\n        swiper.zoom.enabled = false;\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n        // Scale image\n        if (Support.gestures) {\n            swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n            swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n            swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n        else if (swiper.touchEvents.start === 'touchstart') {\n            swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n            swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n            swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n        }\n        // Move image\n        swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove);\n    },\n};\nvar zoom = {\n    name: 'zoom',\n    params: {\n        zoom: {\n            enabled: false,\n            maxRatio: 3,\n            minRatio: 1,\n            toggle: true,\n            containerClass: 'swiper-zoom-container',\n            zoomedSlideClass: 'swiper-slide-zoomed',\n        },\n    },\n    create: function () {\n        var swiper = this;\n        var zoom = {\n            enabled: false,\n            scale: 1,\n            currentScale: 1,\n            isScaling: false,\n            gesture: {\n                $slideEl: undefined,\n                slideWidth: undefined,\n                slideHeight: undefined,\n                $imageEl: undefined,\n                $imageWrapEl: undefined,\n                maxRatio: 3,\n            },\n            image: {\n                isTouched: undefined,\n                isMoved: undefined,\n                currentX: undefined,\n                currentY: undefined,\n                minX: undefined,\n                minY: undefined,\n                maxX: undefined,\n                maxY: undefined,\n                width: undefined,\n                height: undefined,\n                startX: undefined,\n                startY: undefined,\n                touchesStart: {},\n                touchesCurrent: {},\n            },\n            velocity: {\n                x: undefined,\n                y: undefined,\n                prevPositionX: undefined,\n                prevPositionY: undefined,\n                prevTime: undefined,\n            },\n        };\n        ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n            zoom[methodName] = Zoom[methodName].bind(swiper);\n        });\n        Utils.extend(swiper, {\n            zoom: zoom,\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            if (swiper.params.zoom.enabled) {\n                swiper.zoom.enable();\n            }\n        },\n        destroy: function () {\n            var swiper = this;\n            swiper.zoom.disable();\n        },\n        touchStart: function (e) {\n            var swiper = this;\n            if (!swiper.zoom.enabled)\n                return;\n            swiper.zoom.onTouchStart(e);\n        },\n        touchEnd: function (e) {\n            var swiper = this;\n            if (!swiper.zoom.enabled)\n                return;\n            swiper.zoom.onTouchEnd(e);\n        },\n        doubleTap: function (e) {\n            var swiper = this;\n            if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n                swiper.zoom.toggle(e);\n            }\n        },\n        transitionEnd: function () {\n            var swiper = this;\n            if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n                swiper.zoom.onTransitionEnd();\n            }\n        },\n    },\n};\n/* eslint no-underscore-dangle: \"off\" */\nvar Autoplay = {\n    run: function () {\n        var swiper = this;\n        var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n        var delay = swiper.params.autoplay.delay;\n        if ($activeSlideEl.attr('data-swiper-autoplay')) {\n            delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n        }\n        swiper.autoplay.timeout = Utils.nextTick(function () {\n            if (swiper.params.autoplay.reverseDirection) {\n                if (swiper.params.loop) {\n                    swiper.loopFix();\n                    swiper.slidePrev(swiper.params.speed, true, true);\n                    swiper.emit('autoplay');\n                }\n                else if (!swiper.isBeginning) {\n                    swiper.slidePrev(swiper.params.speed, true, true);\n                    swiper.emit('autoplay');\n                }\n                else if (!swiper.params.autoplay.stopOnLastSlide) {\n                    swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n                    swiper.emit('autoplay');\n                }\n                else {\n                    swiper.autoplay.stop();\n                }\n            }\n            else if (swiper.params.loop) {\n                swiper.loopFix();\n                swiper.slideNext(swiper.params.speed, true, true);\n                swiper.emit('autoplay');\n            }\n            else if (!swiper.isEnd) {\n                swiper.slideNext(swiper.params.speed, true, true);\n                swiper.emit('autoplay');\n            }\n            else if (!swiper.params.autoplay.stopOnLastSlide) {\n                swiper.slideTo(0, swiper.params.speed, true, true);\n                swiper.emit('autoplay');\n            }\n            else {\n                swiper.autoplay.stop();\n            }\n        }, delay);\n    },\n    start: function () {\n        var swiper = this;\n        if (typeof swiper.autoplay.timeout !== 'undefined')\n            return false;\n        if (swiper.autoplay.running)\n            return false;\n        swiper.autoplay.running = true;\n        swiper.emit('autoplayStart');\n        swiper.autoplay.run();\n        return true;\n    },\n    stop: function () {\n        var swiper = this;\n        if (!swiper.autoplay.running)\n            return false;\n        if (typeof swiper.autoplay.timeout === 'undefined')\n            return false;\n        if (swiper.autoplay.timeout) {\n            clearTimeout(swiper.autoplay.timeout);\n            swiper.autoplay.timeout = undefined;\n        }\n        swiper.autoplay.running = false;\n        swiper.emit('autoplayStop');\n        return true;\n    },\n    pause: function (speed) {\n        var swiper = this;\n        if (!swiper.autoplay.running)\n            return;\n        if (swiper.autoplay.paused)\n            return;\n        if (swiper.autoplay.timeout)\n            clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.paused = true;\n        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n            swiper.autoplay.paused = false;\n            swiper.autoplay.run();\n        }\n        else {\n            swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n        }\n    },\n};\nvar autoplay = {\n    name: 'autoplay',\n    params: {\n        autoplay: {\n            enabled: false,\n            delay: 3000,\n            waitForTransition: true,\n            disableOnInteraction: true,\n            stopOnLastSlide: false,\n            reverseDirection: false,\n        },\n    },\n    create: function () {\n        var swiper = this;\n        Utils.extend(swiper, {\n            autoplay: {\n                running: false,\n                paused: false,\n                run: Autoplay.run.bind(swiper),\n                start: Autoplay.start.bind(swiper),\n                stop: Autoplay.stop.bind(swiper),\n                pause: Autoplay.pause.bind(swiper),\n                onTransitionEnd: function (e) {\n                    if (!swiper || swiper.destroyed || !swiper.$wrapperEl)\n                        return;\n                    if (e.target !== this)\n                        return;\n                    swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n                    swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n                    swiper.autoplay.paused = false;\n                    if (!swiper.autoplay.running) {\n                        swiper.autoplay.stop();\n                    }\n                    else {\n                        swiper.autoplay.run();\n                    }\n                },\n            },\n        });\n    },\n    on: {\n        init: function () {\n            var swiper = this;\n            if (swiper.params.autoplay.enabled) {\n                swiper.autoplay.start();\n            }\n        },\n        beforeTransitionStart: function (speed, internal) {\n            var swiper = this;\n            if (swiper.autoplay.running) {\n                if (internal || !swiper.params.autoplay.disableOnInteraction) {\n                    swiper.autoplay.pause(speed);\n                }\n                else {\n                    swiper.autoplay.stop();\n                }\n            }\n        },\n        sliderFirstMove: function () {\n            var swiper = this;\n            if (swiper.autoplay.running) {\n                if (swiper.params.autoplay.disableOnInteraction) {\n                    swiper.autoplay.stop();\n                }\n                else {\n                    swiper.autoplay.pause();\n                }\n            }\n        },\n        destroy: function () {\n            var swiper = this;\n            if (swiper.autoplay.running) {\n                swiper.autoplay.stop();\n            }\n        },\n    },\n};\n// Swiper Class\nvar components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n];\nif (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n}\nSwiper.use(components);\nSwiper.use([pagination, scrollbar, autoplay, zoom]);\nexport { Swiper };\n"],"sourceRoot":""}