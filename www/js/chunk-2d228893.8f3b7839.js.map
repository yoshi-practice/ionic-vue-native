{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es5/build/gesture.js"],"names":["__webpack_require__","r","__webpack_exports__","d","createGesture","_sPassive","_chunk_892e1642_js__WEBPACK_IMPORTED_MODULE_0__","supportsPassive","node","undefined","opts","Object","defineProperty","get","addEventListener","e","el","eventName","callback","add","remove","listenerOpts","capture","passive","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","handleTouchEnd","handleMouseDown","console","debug","getDocument","handleMouseUp","stopTouch","stopMouse","stop","setDisabled","disabled","destroy","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","Math","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","start","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","config","finalConfig","assign","disableScroll","gesturePriority","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","queue","detail","type","startTimeStamp","currentX","currentY","velocityX","velocityY","timeStamp","event","data","pointerEvents","pan","gesture","name","gestureName","priority","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","updateDetail","release","tryToCapturePan","calcGestureData","write","fireOnMove","abortGesture","then","fireOnStart","reset","tmpHasCaptured","tmpHasFiredStart","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY"],"mappings":"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","file":"js/chunk-2d228893.8f3b7839.js","sourcesContent":["import { a as GESTURE_CONTROLLER } from './chunk-892e1642.js';\nvar _sPassive;\nfunction supportsPassive(node) {\n    if (_sPassive === undefined) {\n        try {\n            var opts = Object.defineProperty({}, 'passive', {\n                get: function () {\n                    _sPassive = true;\n                }\n            });\n            node.addEventListener('optsTest', function () { return; }, opts);\n        }\n        catch (e) {\n            _sPassive = false;\n        }\n    }\n    return !!_sPassive;\n}\nfunction addEventListener(el, eventName, callback, opts) {\n    var listenerOpts = supportsPassive(el) ? {\n        'capture': !!opts.capture,\n        'passive': !!opts.passive,\n    } : !!opts.capture;\n    var add;\n    var remove;\n    if (el['__zone_symbol__addEventListener']) {\n        add = '__zone_symbol__addEventListener';\n        remove = '__zone_symbol__removeEventListener';\n    }\n    else {\n        add = 'addEventListener';\n        remove = 'removeEventListener';\n    }\n    el[add](eventName, callback, listenerOpts);\n    return function () {\n        el[remove](eventName, callback, listenerOpts);\n    };\n}\nvar MOUSE_WAIT = 2000;\nfunction createPointerEvents(el, pointerDown, pointerMove, pointerUp, options) {\n    var rmTouchStart;\n    var rmTouchMove;\n    var rmTouchEnd;\n    var rmTouchCancel;\n    var rmMouseStart;\n    var rmMouseMove;\n    var rmMouseUp;\n    var lastTouchEvent = 0;\n    function handleTouchStart(ev) {\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmTouchMove && pointerMove) {\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n        }\n        if (!rmTouchEnd) {\n            rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n        }\n        if (!rmTouchCancel) {\n            rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n        }\n    }\n    function handleMouseDown(ev) {\n        if (lastTouchEvent > Date.now()) {\n            console.debug('mousedown event dropped because of previous touch');\n            return;\n        }\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmMouseMove && pointerMove) {\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n        }\n        if (!rmMouseUp) {\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n        }\n    }\n    function handleTouchEnd(ev) {\n        stopTouch();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    }\n    function handleMouseUp(ev) {\n        stopMouse();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    }\n    function stopTouch() {\n        if (rmTouchMove) {\n            rmTouchMove();\n        }\n        if (rmTouchEnd) {\n            rmTouchEnd();\n        }\n        if (rmTouchCancel) {\n            rmTouchCancel();\n        }\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n    }\n    function stopMouse() {\n        if (rmMouseMove) {\n            rmMouseMove();\n        }\n        if (rmMouseUp) {\n            rmMouseUp();\n        }\n        rmMouseMove = rmMouseUp = undefined;\n    }\n    function stop() {\n        stopTouch();\n        stopMouse();\n    }\n    function setDisabled(disabled) {\n        if (disabled) {\n            if (rmTouchStart) {\n                rmTouchStart();\n            }\n            if (rmMouseStart) {\n                rmMouseStart();\n            }\n            rmTouchStart = rmMouseStart = undefined;\n            stop();\n        }\n        else {\n            if (!rmTouchStart) {\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n            }\n            if (!rmMouseStart) {\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n            }\n        }\n    }\n    function destroy() {\n        setDisabled(true);\n        pointerUp = pointerMove = pointerDown = undefined;\n    }\n    return {\n        setDisabled: setDisabled,\n        stop: stop,\n        destroy: destroy\n    };\n}\nfunction getDocument(node) {\n    return node instanceof Document ? node : node.ownerDocument;\n}\nfunction createPanRecognizer(direction, thresh, maxAngle) {\n    var radians = maxAngle * (Math.PI / 180);\n    var isDirX = direction === 'x';\n    var maxCosine = Math.cos(radians);\n    var threshold = thresh * thresh;\n    var startX = 0;\n    var startY = 0;\n    var dirty = false;\n    var isPan = 0;\n    return {\n        start: function (x, y) {\n            startX = x;\n            startY = y;\n            isPan = 0;\n            dirty = true;\n        },\n        detect: function (x, y) {\n            if (!dirty) {\n                return false;\n            }\n            var deltaX = (x - startX);\n            var deltaY = (y - startY);\n            var distance = deltaX * deltaX + deltaY * deltaY;\n            if (distance < threshold) {\n                return false;\n            }\n            var hypotenuse = Math.sqrt(distance);\n            var cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n            if (cosine > maxCosine) {\n                isPan = 1;\n            }\n            else if (cosine < -maxCosine) {\n                isPan = -1;\n            }\n            else {\n                isPan = 0;\n            }\n            dirty = false;\n            return true;\n        },\n        isGesture: function () {\n            return isPan !== 0;\n        },\n        getDirection: function () {\n            return isPan;\n        }\n    };\n}\nfunction createGesture(config) {\n    var finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n    var canStart = finalConfig.canStart;\n    var onWillStart = finalConfig.onWillStart;\n    var onStart = finalConfig.onStart;\n    var onEnd = finalConfig.onEnd;\n    var notCaptured = finalConfig.notCaptured;\n    var onMove = finalConfig.onMove;\n    var threshold = finalConfig.threshold;\n    var queue = finalConfig.queue;\n    var detail = {\n        type: 'pan',\n        startX: 0,\n        startY: 0,\n        startTimeStamp: 0,\n        currentX: 0,\n        currentY: 0,\n        velocityX: 0,\n        velocityY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        timeStamp: 0,\n        event: undefined,\n        data: undefined\n    };\n    var pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n        capture: false,\n    });\n    var pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n    var gesture = GESTURE_CONTROLLER.createGesture({\n        name: config.gestureName,\n        priority: config.gesturePriority,\n        disableScroll: config.disableScroll\n    });\n    var hasCapturedPan = false;\n    var hasStartedPan = false;\n    var hasFiredStart = true;\n    var isMoveQueued = false;\n    function pointerDown(ev) {\n        var timeStamp = now(ev);\n        if (hasStartedPan || !hasFiredStart) {\n            return false;\n        }\n        updateDetail(ev, detail);\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTimeStamp = detail.timeStamp = timeStamp;\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n        detail.event = ev;\n        if (canStart && canStart(detail) === false) {\n            return false;\n        }\n        gesture.release();\n        if (!gesture.start()) {\n            return false;\n        }\n        hasStartedPan = true;\n        if (threshold === 0) {\n            return tryToCapturePan();\n        }\n        pan.start(detail.startX, detail.startY);\n        return true;\n    }\n    function pointerMove(ev) {\n        if (hasCapturedPan) {\n            if (!isMoveQueued && hasFiredStart) {\n                isMoveQueued = true;\n                calcGestureData(detail, ev);\n                queue.write(fireOnMove);\n            }\n            return;\n        }\n        calcGestureData(detail, ev);\n        if (pan.detect(detail.currentX, detail.currentY)) {\n            if (!pan.isGesture() || !tryToCapturePan()) {\n                abortGesture();\n            }\n        }\n    }\n    function fireOnMove() {\n        if (!hasCapturedPan) {\n            return;\n        }\n        isMoveQueued = false;\n        if (onMove) {\n            onMove(detail);\n        }\n    }\n    function tryToCapturePan() {\n        if (gesture && !gesture.capture()) {\n            return false;\n        }\n        hasCapturedPan = true;\n        hasFiredStart = false;\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTimeStamp = detail.timeStamp;\n        if (onWillStart) {\n            onWillStart(detail).then(fireOnStart);\n        }\n        else {\n            fireOnStart();\n        }\n        return true;\n    }\n    function fireOnStart() {\n        if (onStart) {\n            onStart(detail);\n        }\n        hasFiredStart = true;\n    }\n    function abortGesture() {\n        reset();\n        pointerEvents.stop();\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    }\n    function reset() {\n        hasCapturedPan = false;\n        hasStartedPan = false;\n        isMoveQueued = false;\n        hasFiredStart = true;\n        gesture.release();\n    }\n    function pointerUp(ev) {\n        var tmpHasCaptured = hasCapturedPan;\n        var tmpHasFiredStart = hasFiredStart;\n        reset();\n        if (!tmpHasFiredStart) {\n            return;\n        }\n        calcGestureData(detail, ev);\n        if (tmpHasCaptured) {\n            if (onEnd) {\n                onEnd(detail);\n            }\n            return;\n        }\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    }\n    return {\n        setDisabled: function (disabled) {\n            pointerEvents.setDisabled(disabled);\n        },\n        destroy: function () {\n            gesture.destroy();\n            pointerEvents.destroy();\n        }\n    };\n}\nfunction calcGestureData(detail, ev) {\n    var prevX = detail.currentX;\n    var prevY = detail.currentY;\n    var prevT = detail.timeStamp;\n    updateDetail(ev, detail);\n    var currentX = detail.currentX;\n    var currentY = detail.currentY;\n    var timestamp = detail.timeStamp = now(ev);\n    var timeDelta = timestamp - prevT;\n    if (timeDelta > 0 && timeDelta < 100) {\n        var velocityX = (currentX - prevX) / timeDelta;\n        var velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    detail.event = ev;\n}\nfunction updateDetail(ev, detail) {\n    var x = 0;\n    var y = 0;\n    if (ev) {\n        var changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            var touch = changedTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n        }\n        else if (ev.pageX !== undefined) {\n            x = ev.pageX;\n            y = ev.pageY;\n        }\n    }\n    detail.currentX = x;\n    detail.currentY = y;\n}\nfunction now(ev) {\n    return ev.timeStamp || Date.now();\n}\nexport { createGesture };\n"],"sourceRoot":""}